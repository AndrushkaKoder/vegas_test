/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["resources_admin_js_adminlte_js"],{

/***/ "./resources/admin/js/adminlte.js":
/*!****************************************!*\
  !*** ./resources/Admin/js/adminlte.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/*!\n * AdminLTE v3.2.0 (https://adminlte.io)\n * Copyright 2014-2022 Colorlib <https://colorlib.com>\n * Licensed under MIT (https://github.com/ColorlibHQ/AdminLTE/blob/master/LICENSE)\n */\n(function (global, factory) {\n  ( false ? 0 : _typeof(exports)) === 'object' && \"object\" !== 'undefined' ? factory(exports, __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'jquery'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()))) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'jquery'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : (0);\n})(this, function (exports, $) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && _typeof(e) === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n  var $__default = /*#__PURE__*/_interopDefaultLegacy($);\n\n  /**\n   * --------------------------------------------\n   * AdminLTE CardRefresh.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$e = 'CardRefresh';\n  var DATA_KEY$e = 'lte.cardrefresh';\n  var EVENT_KEY$7 = \".\" + DATA_KEY$e;\n  var JQUERY_NO_CONFLICT$e = $__default[\"default\"].fn[NAME$e];\n  var EVENT_LOADED = \"loaded\" + EVENT_KEY$7;\n  var EVENT_OVERLAY_ADDED = \"overlay.added\" + EVENT_KEY$7;\n  var EVENT_OVERLAY_REMOVED = \"overlay.removed\" + EVENT_KEY$7;\n  var CLASS_NAME_CARD$1 = 'card';\n  var SELECTOR_CARD$1 = \".\" + CLASS_NAME_CARD$1;\n  var SELECTOR_DATA_REFRESH = '[data-card-widget=\"card-refresh\"]';\n  var Default$c = {\n    source: '',\n    sourceSelector: '',\n    params: {},\n    trigger: SELECTOR_DATA_REFRESH,\n    content: '.card-body',\n    loadInContent: true,\n    loadOnInit: true,\n    loadErrorTemplate: true,\n    responseType: '',\n    overlayTemplate: '<div class=\"overlay\"><i class=\"fas fa-2x fa-sync-alt fa-spin\"></i></div>',\n    errorTemplate: '<span class=\"text-danger\"></span>',\n    onLoadStart: function onLoadStart() {},\n    onLoadDone: function onLoadDone(response) {\n      return response;\n    },\n    onLoadFail: function onLoadFail(_jqXHR, _textStatus, _errorThrown) {}\n  };\n  var CardRefresh = /*#__PURE__*/function () {\n    function CardRefresh(element, settings) {\n      this._element = element;\n      this._parent = element.parents(SELECTOR_CARD$1).first();\n      this._settings = $__default[\"default\"].extend({}, Default$c, settings);\n      this._overlay = $__default[\"default\"](this._settings.overlayTemplate);\n      if (element.hasClass(CLASS_NAME_CARD$1)) {\n        this._parent = element;\n      }\n      if (this._settings.source === '') {\n        throw new Error('Source url was not defined. Please specify a url in your CardRefresh source option.');\n      }\n    }\n    var _proto = CardRefresh.prototype;\n    _proto.load = function load() {\n      var _this = this;\n      this._addOverlay();\n      this._settings.onLoadStart.call($__default[\"default\"](this));\n      $__default[\"default\"].get(this._settings.source, this._settings.params, function (response) {\n        if (_this._settings.loadInContent) {\n          if (_this._settings.sourceSelector !== '') {\n            response = $__default[\"default\"](response).find(_this._settings.sourceSelector).html();\n          }\n          _this._parent.find(_this._settings.content).html(response);\n        }\n        _this._settings.onLoadDone.call($__default[\"default\"](_this), response);\n        _this._removeOverlay();\n      }, this._settings.responseType !== '' && this._settings.responseType).fail(function (jqXHR, textStatus, errorThrown) {\n        _this._removeOverlay();\n        if (_this._settings.loadErrorTemplate) {\n          var msg = $__default[\"default\"](_this._settings.errorTemplate).text(errorThrown);\n          _this._parent.find(_this._settings.content).empty().append(msg);\n        }\n        _this._settings.onLoadFail.call($__default[\"default\"](_this), jqXHR, textStatus, errorThrown);\n      });\n      $__default[\"default\"](this._element).trigger($__default[\"default\"].Event(EVENT_LOADED));\n    };\n    _proto._addOverlay = function _addOverlay() {\n      this._parent.append(this._overlay);\n      $__default[\"default\"](this._element).trigger($__default[\"default\"].Event(EVENT_OVERLAY_ADDED));\n    };\n    _proto._removeOverlay = function _removeOverlay() {\n      this._parent.find(this._overlay).remove();\n      $__default[\"default\"](this._element).trigger($__default[\"default\"].Event(EVENT_OVERLAY_REMOVED));\n    } // Private\n    ;\n\n    _proto._init = function _init() {\n      var _this2 = this;\n      $__default[\"default\"](this).find(this._settings.trigger).on('click', function () {\n        _this2.load();\n      });\n      if (this._settings.loadOnInit) {\n        this.load();\n      }\n    } // Static\n    ;\n\n    CardRefresh._jQueryInterface = function _jQueryInterface(config) {\n      var data = $__default[\"default\"](this).data(DATA_KEY$e);\n      var _options = $__default[\"default\"].extend({}, Default$c, $__default[\"default\"](this).data());\n      if (!data) {\n        data = new CardRefresh($__default[\"default\"](this), _options);\n        $__default[\"default\"](this).data(DATA_KEY$e, typeof config === 'string' ? data : config);\n      }\n      if (typeof config === 'string' && /load/.test(config)) {\n        data[config]();\n      } else {\n        data._init($__default[\"default\"](this));\n      }\n    };\n    return CardRefresh;\n  }();\n  /**\n   * Data API\n   * ====================================================\n   */\n\n  $__default[\"default\"](document).on('click', SELECTOR_DATA_REFRESH, function (event) {\n    if (event) {\n      event.preventDefault();\n    }\n    CardRefresh._jQueryInterface.call($__default[\"default\"](this), 'load');\n  });\n  $__default[\"default\"](function () {\n    $__default[\"default\"](SELECTOR_DATA_REFRESH).each(function () {\n      CardRefresh._jQueryInterface.call($__default[\"default\"](this));\n    });\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$e] = CardRefresh._jQueryInterface;\n  $__default[\"default\"].fn[NAME$e].Constructor = CardRefresh;\n  $__default[\"default\"].fn[NAME$e].noConflict = function () {\n    $__default[\"default\"].fn[NAME$e] = JQUERY_NO_CONFLICT$e;\n    return CardRefresh._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE CardWidget.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$d = 'CardWidget';\n  var DATA_KEY$d = 'lte.cardwidget';\n  var EVENT_KEY$6 = \".\" + DATA_KEY$d;\n  var JQUERY_NO_CONFLICT$d = $__default[\"default\"].fn[NAME$d];\n  var EVENT_EXPANDED$3 = \"expanded\" + EVENT_KEY$6;\n  var EVENT_COLLAPSED$4 = \"collapsed\" + EVENT_KEY$6;\n  var EVENT_MAXIMIZED = \"maximized\" + EVENT_KEY$6;\n  var EVENT_MINIMIZED = \"minimized\" + EVENT_KEY$6;\n  var EVENT_REMOVED$1 = \"removed\" + EVENT_KEY$6;\n  var CLASS_NAME_CARD = 'card';\n  var CLASS_NAME_COLLAPSED$1 = 'collapsed-card';\n  var CLASS_NAME_COLLAPSING = 'collapsing-card';\n  var CLASS_NAME_EXPANDING = 'expanding-card';\n  var CLASS_NAME_WAS_COLLAPSED = 'was-collapsed';\n  var CLASS_NAME_MAXIMIZED = 'maximized-card';\n  var SELECTOR_DATA_REMOVE = '[data-card-widget=\"remove\"]';\n  var SELECTOR_DATA_COLLAPSE = '[data-card-widget=\"collapse\"]';\n  var SELECTOR_DATA_MAXIMIZE = '[data-card-widget=\"maximize\"]';\n  var SELECTOR_CARD = \".\" + CLASS_NAME_CARD;\n  var SELECTOR_CARD_HEADER = '.card-header';\n  var SELECTOR_CARD_BODY = '.card-body';\n  var SELECTOR_CARD_FOOTER = '.card-footer';\n  var Default$b = {\n    animationSpeed: 'normal',\n    collapseTrigger: SELECTOR_DATA_COLLAPSE,\n    removeTrigger: SELECTOR_DATA_REMOVE,\n    maximizeTrigger: SELECTOR_DATA_MAXIMIZE,\n    collapseIcon: 'fa-minus',\n    expandIcon: 'fa-plus',\n    maximizeIcon: 'fa-expand',\n    minimizeIcon: 'fa-compress'\n  };\n  var CardWidget = /*#__PURE__*/function () {\n    function CardWidget(element, settings) {\n      this._element = element;\n      this._parent = element.parents(SELECTOR_CARD).first();\n      if (element.hasClass(CLASS_NAME_CARD)) {\n        this._parent = element;\n      }\n      this._settings = $__default[\"default\"].extend({}, Default$b, settings);\n    }\n    var _proto = CardWidget.prototype;\n    _proto.collapse = function collapse() {\n      var _this = this;\n      this._parent.addClass(CLASS_NAME_COLLAPSING).children(SELECTOR_CARD_BODY + \", \" + SELECTOR_CARD_FOOTER).slideUp(this._settings.animationSpeed, function () {\n        _this._parent.addClass(CLASS_NAME_COLLAPSED$1).removeClass(CLASS_NAME_COLLAPSING);\n      });\n      this._parent.find(\"> \" + SELECTOR_CARD_HEADER + \" \" + this._settings.collapseTrigger + \" .\" + this._settings.collapseIcon).addClass(this._settings.expandIcon).removeClass(this._settings.collapseIcon);\n      this._element.trigger($__default[\"default\"].Event(EVENT_COLLAPSED$4), this._parent);\n    };\n    _proto.expand = function expand() {\n      var _this2 = this;\n      this._parent.addClass(CLASS_NAME_EXPANDING).children(SELECTOR_CARD_BODY + \", \" + SELECTOR_CARD_FOOTER).slideDown(this._settings.animationSpeed, function () {\n        _this2._parent.removeClass(CLASS_NAME_COLLAPSED$1).removeClass(CLASS_NAME_EXPANDING);\n      });\n      this._parent.find(\"> \" + SELECTOR_CARD_HEADER + \" \" + this._settings.collapseTrigger + \" .\" + this._settings.expandIcon).addClass(this._settings.collapseIcon).removeClass(this._settings.expandIcon);\n      this._element.trigger($__default[\"default\"].Event(EVENT_EXPANDED$3), this._parent);\n    };\n    _proto.remove = function remove() {\n      this._parent.slideUp();\n      this._element.trigger($__default[\"default\"].Event(EVENT_REMOVED$1), this._parent);\n    };\n    _proto.toggle = function toggle() {\n      if (this._parent.hasClass(CLASS_NAME_COLLAPSED$1)) {\n        this.expand();\n        return;\n      }\n      this.collapse();\n    };\n    _proto.maximize = function maximize() {\n      this._parent.find(this._settings.maximizeTrigger + \" .\" + this._settings.maximizeIcon).addClass(this._settings.minimizeIcon).removeClass(this._settings.maximizeIcon);\n      this._parent.css({\n        height: this._parent.height(),\n        width: this._parent.width(),\n        transition: 'all .15s'\n      }).delay(150).queue(function () {\n        var $element = $__default[\"default\"](this);\n        $element.addClass(CLASS_NAME_MAXIMIZED);\n        $__default[\"default\"]('html').addClass(CLASS_NAME_MAXIMIZED);\n        if ($element.hasClass(CLASS_NAME_COLLAPSED$1)) {\n          $element.addClass(CLASS_NAME_WAS_COLLAPSED);\n        }\n        $element.dequeue();\n      });\n      this._element.trigger($__default[\"default\"].Event(EVENT_MAXIMIZED), this._parent);\n    };\n    _proto.minimize = function minimize() {\n      this._parent.find(this._settings.maximizeTrigger + \" .\" + this._settings.minimizeIcon).addClass(this._settings.maximizeIcon).removeClass(this._settings.minimizeIcon);\n      this._parent.css('cssText', \"height: \" + this._parent[0].style.height + \" !important; width: \" + this._parent[0].style.width + \" !important; transition: all .15s;\").delay(10).queue(function () {\n        var $element = $__default[\"default\"](this);\n        $element.removeClass(CLASS_NAME_MAXIMIZED);\n        $__default[\"default\"]('html').removeClass(CLASS_NAME_MAXIMIZED);\n        $element.css({\n          height: 'inherit',\n          width: 'inherit'\n        });\n        if ($element.hasClass(CLASS_NAME_WAS_COLLAPSED)) {\n          $element.removeClass(CLASS_NAME_WAS_COLLAPSED);\n        }\n        $element.dequeue();\n      });\n      this._element.trigger($__default[\"default\"].Event(EVENT_MINIMIZED), this._parent);\n    };\n    _proto.toggleMaximize = function toggleMaximize() {\n      if (this._parent.hasClass(CLASS_NAME_MAXIMIZED)) {\n        this.minimize();\n        return;\n      }\n      this.maximize();\n    } // Private\n    ;\n\n    _proto._init = function _init(card) {\n      var _this3 = this;\n      this._parent = card;\n      $__default[\"default\"](this).find(this._settings.collapseTrigger).click(function () {\n        _this3.toggle();\n      });\n      $__default[\"default\"](this).find(this._settings.maximizeTrigger).click(function () {\n        _this3.toggleMaximize();\n      });\n      $__default[\"default\"](this).find(this._settings.removeTrigger).click(function () {\n        _this3.remove();\n      });\n    } // Static\n    ;\n\n    CardWidget._jQueryInterface = function _jQueryInterface(config) {\n      var data = $__default[\"default\"](this).data(DATA_KEY$d);\n      var _options = $__default[\"default\"].extend({}, Default$b, $__default[\"default\"](this).data());\n      if (!data) {\n        data = new CardWidget($__default[\"default\"](this), _options);\n        $__default[\"default\"](this).data(DATA_KEY$d, typeof config === 'string' ? data : config);\n      }\n      if (typeof config === 'string' && /collapse|expand|remove|toggle|maximize|minimize|toggleMaximize/.test(config)) {\n        data[config]();\n      } else if (_typeof(config) === 'object') {\n        data._init($__default[\"default\"](this));\n      }\n    };\n    return CardWidget;\n  }();\n  /**\n   * Data API\n   * ====================================================\n   */\n\n  $__default[\"default\"](document).on('click', SELECTOR_DATA_COLLAPSE, function (event) {\n    if (event) {\n      event.preventDefault();\n    }\n    CardWidget._jQueryInterface.call($__default[\"default\"](this), 'toggle');\n  });\n  $__default[\"default\"](document).on('click', SELECTOR_DATA_REMOVE, function (event) {\n    if (event) {\n      event.preventDefault();\n    }\n    CardWidget._jQueryInterface.call($__default[\"default\"](this), 'remove');\n  });\n  $__default[\"default\"](document).on('click', SELECTOR_DATA_MAXIMIZE, function (event) {\n    if (event) {\n      event.preventDefault();\n    }\n    CardWidget._jQueryInterface.call($__default[\"default\"](this), 'toggleMaximize');\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$d] = CardWidget._jQueryInterface;\n  $__default[\"default\"].fn[NAME$d].Constructor = CardWidget;\n  $__default[\"default\"].fn[NAME$d].noConflict = function () {\n    $__default[\"default\"].fn[NAME$d] = JQUERY_NO_CONFLICT$d;\n    return CardWidget._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE ControlSidebar.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$c = 'ControlSidebar';\n  var DATA_KEY$c = 'lte.controlsidebar';\n  var EVENT_KEY$5 = \".\" + DATA_KEY$c;\n  var JQUERY_NO_CONFLICT$c = $__default[\"default\"].fn[NAME$c];\n  var EVENT_COLLAPSED$3 = \"collapsed\" + EVENT_KEY$5;\n  var EVENT_COLLAPSED_DONE$1 = \"collapsed-done\" + EVENT_KEY$5;\n  var EVENT_EXPANDED$2 = \"expanded\" + EVENT_KEY$5;\n  var SELECTOR_CONTROL_SIDEBAR = '.control-sidebar';\n  var SELECTOR_CONTROL_SIDEBAR_CONTENT$1 = '.control-sidebar-content';\n  var SELECTOR_DATA_TOGGLE$4 = '[data-widget=\"control-sidebar\"]';\n  var SELECTOR_HEADER$1 = '.main-header';\n  var SELECTOR_FOOTER$1 = '.main-footer';\n  var CLASS_NAME_CONTROL_SIDEBAR_ANIMATE = 'control-sidebar-animate';\n  var CLASS_NAME_CONTROL_SIDEBAR_OPEN$1 = 'control-sidebar-open';\n  var CLASS_NAME_CONTROL_SIDEBAR_SLIDE = 'control-sidebar-slide-open';\n  var CLASS_NAME_LAYOUT_FIXED$1 = 'layout-fixed';\n  var CLASS_NAME_NAVBAR_FIXED = 'layout-navbar-fixed';\n  var CLASS_NAME_NAVBAR_SM_FIXED = 'layout-sm-navbar-fixed';\n  var CLASS_NAME_NAVBAR_MD_FIXED = 'layout-md-navbar-fixed';\n  var CLASS_NAME_NAVBAR_LG_FIXED = 'layout-lg-navbar-fixed';\n  var CLASS_NAME_NAVBAR_XL_FIXED = 'layout-xl-navbar-fixed';\n  var CLASS_NAME_FOOTER_FIXED = 'layout-footer-fixed';\n  var CLASS_NAME_FOOTER_SM_FIXED = 'layout-sm-footer-fixed';\n  var CLASS_NAME_FOOTER_MD_FIXED = 'layout-md-footer-fixed';\n  var CLASS_NAME_FOOTER_LG_FIXED = 'layout-lg-footer-fixed';\n  var CLASS_NAME_FOOTER_XL_FIXED = 'layout-xl-footer-fixed';\n  var Default$a = {\n    controlsidebarSlide: true,\n    scrollbarTheme: 'os-theme-light',\n    scrollbarAutoHide: 'l',\n    target: SELECTOR_CONTROL_SIDEBAR,\n    animationSpeed: 300\n  };\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var ControlSidebar = /*#__PURE__*/function () {\n    function ControlSidebar(element, config) {\n      this._element = element;\n      this._config = config;\n    } // Public\n\n    var _proto = ControlSidebar.prototype;\n    _proto.collapse = function collapse() {\n      var _this = this;\n      var $body = $__default[\"default\"]('body');\n      var $html = $__default[\"default\"]('html'); // Show the control sidebar\n\n      if (this._config.controlsidebarSlide) {\n        $html.addClass(CLASS_NAME_CONTROL_SIDEBAR_ANIMATE);\n        $body.removeClass(CLASS_NAME_CONTROL_SIDEBAR_SLIDE).delay(300).queue(function () {\n          $__default[\"default\"](SELECTOR_CONTROL_SIDEBAR).hide();\n          $html.removeClass(CLASS_NAME_CONTROL_SIDEBAR_ANIMATE);\n          $__default[\"default\"](this).dequeue();\n        });\n      } else {\n        $body.removeClass(CLASS_NAME_CONTROL_SIDEBAR_OPEN$1);\n      }\n      $__default[\"default\"](this._element).trigger($__default[\"default\"].Event(EVENT_COLLAPSED$3));\n      setTimeout(function () {\n        $__default[\"default\"](_this._element).trigger($__default[\"default\"].Event(EVENT_COLLAPSED_DONE$1));\n      }, this._config.animationSpeed);\n    };\n    _proto.show = function show(toggle) {\n      if (toggle === void 0) {\n        toggle = false;\n      }\n      var $body = $__default[\"default\"]('body');\n      var $html = $__default[\"default\"]('html');\n      if (toggle) {\n        $__default[\"default\"](SELECTOR_CONTROL_SIDEBAR).hide();\n      } // Collapse the control sidebar\n\n      if (this._config.controlsidebarSlide) {\n        $html.addClass(CLASS_NAME_CONTROL_SIDEBAR_ANIMATE);\n        $__default[\"default\"](this._config.target).show().delay(10).queue(function () {\n          $body.addClass(CLASS_NAME_CONTROL_SIDEBAR_SLIDE).delay(300).queue(function () {\n            $html.removeClass(CLASS_NAME_CONTROL_SIDEBAR_ANIMATE);\n            $__default[\"default\"](this).dequeue();\n          });\n          $__default[\"default\"](this).dequeue();\n        });\n      } else {\n        $body.addClass(CLASS_NAME_CONTROL_SIDEBAR_OPEN$1);\n      }\n      this._fixHeight();\n      this._fixScrollHeight();\n      $__default[\"default\"](this._element).trigger($__default[\"default\"].Event(EVENT_EXPANDED$2));\n    };\n    _proto.toggle = function toggle() {\n      var $body = $__default[\"default\"]('body');\n      var target = this._config.target;\n      var notVisible = !$__default[\"default\"](target).is(':visible');\n      var shouldClose = $body.hasClass(CLASS_NAME_CONTROL_SIDEBAR_OPEN$1) || $body.hasClass(CLASS_NAME_CONTROL_SIDEBAR_SLIDE);\n      var shouldToggle = notVisible && ($body.hasClass(CLASS_NAME_CONTROL_SIDEBAR_OPEN$1) || $body.hasClass(CLASS_NAME_CONTROL_SIDEBAR_SLIDE));\n      if (notVisible || shouldToggle) {\n        // Open the control sidebar\n        this.show(notVisible);\n      } else if (shouldClose) {\n        // Close the control sidebar\n        this.collapse();\n      }\n    } // Private\n    ;\n\n    _proto._init = function _init() {\n      var _this2 = this;\n      var $body = $__default[\"default\"]('body');\n      var shouldNotHideAll = $body.hasClass(CLASS_NAME_CONTROL_SIDEBAR_OPEN$1) || $body.hasClass(CLASS_NAME_CONTROL_SIDEBAR_SLIDE);\n      if (shouldNotHideAll) {\n        $__default[\"default\"](SELECTOR_CONTROL_SIDEBAR).not(this._config.target).hide();\n        $__default[\"default\"](this._config.target).css('display', 'block');\n      } else {\n        $__default[\"default\"](SELECTOR_CONTROL_SIDEBAR).hide();\n      }\n      this._fixHeight();\n      this._fixScrollHeight();\n      $__default[\"default\"](window).resize(function () {\n        _this2._fixHeight();\n        _this2._fixScrollHeight();\n      });\n      $__default[\"default\"](window).scroll(function () {\n        var $body = $__default[\"default\"]('body');\n        var shouldFixHeight = $body.hasClass(CLASS_NAME_CONTROL_SIDEBAR_OPEN$1) || $body.hasClass(CLASS_NAME_CONTROL_SIDEBAR_SLIDE);\n        if (shouldFixHeight) {\n          _this2._fixScrollHeight();\n        }\n      });\n    };\n    _proto._isNavbarFixed = function _isNavbarFixed() {\n      var $body = $__default[\"default\"]('body');\n      return $body.hasClass(CLASS_NAME_NAVBAR_FIXED) || $body.hasClass(CLASS_NAME_NAVBAR_SM_FIXED) || $body.hasClass(CLASS_NAME_NAVBAR_MD_FIXED) || $body.hasClass(CLASS_NAME_NAVBAR_LG_FIXED) || $body.hasClass(CLASS_NAME_NAVBAR_XL_FIXED);\n    };\n    _proto._isFooterFixed = function _isFooterFixed() {\n      var $body = $__default[\"default\"]('body');\n      return $body.hasClass(CLASS_NAME_FOOTER_FIXED) || $body.hasClass(CLASS_NAME_FOOTER_SM_FIXED) || $body.hasClass(CLASS_NAME_FOOTER_MD_FIXED) || $body.hasClass(CLASS_NAME_FOOTER_LG_FIXED) || $body.hasClass(CLASS_NAME_FOOTER_XL_FIXED);\n    };\n    _proto._fixScrollHeight = function _fixScrollHeight() {\n      var $body = $__default[\"default\"]('body');\n      var $controlSidebar = $__default[\"default\"](this._config.target);\n      if (!$body.hasClass(CLASS_NAME_LAYOUT_FIXED$1)) {\n        return;\n      }\n      var heights = {\n        scroll: $__default[\"default\"](document).height(),\n        window: $__default[\"default\"](window).height(),\n        header: $__default[\"default\"](SELECTOR_HEADER$1).outerHeight(),\n        footer: $__default[\"default\"](SELECTOR_FOOTER$1).outerHeight()\n      };\n      var positions = {\n        bottom: Math.abs(heights.window + $__default[\"default\"](window).scrollTop() - heights.scroll),\n        top: $__default[\"default\"](window).scrollTop()\n      };\n      var navbarFixed = this._isNavbarFixed() && $__default[\"default\"](SELECTOR_HEADER$1).css('position') === 'fixed';\n      var footerFixed = this._isFooterFixed() && $__default[\"default\"](SELECTOR_FOOTER$1).css('position') === 'fixed';\n      var $controlsidebarContent = $__default[\"default\"](this._config.target + \", \" + this._config.target + \" \" + SELECTOR_CONTROL_SIDEBAR_CONTENT$1);\n      if (positions.top === 0 && positions.bottom === 0) {\n        $controlSidebar.css({\n          bottom: heights.footer,\n          top: heights.header\n        });\n        $controlsidebarContent.css('height', heights.window - (heights.header + heights.footer));\n      } else if (positions.bottom <= heights.footer) {\n        if (footerFixed === false) {\n          var top = heights.header - positions.top;\n          $controlSidebar.css('bottom', heights.footer - positions.bottom).css('top', top >= 0 ? top : 0);\n          $controlsidebarContent.css('height', heights.window - (heights.footer - positions.bottom));\n        } else {\n          $controlSidebar.css('bottom', heights.footer);\n        }\n      } else if (positions.top <= heights.header) {\n        if (navbarFixed === false) {\n          $controlSidebar.css('top', heights.header - positions.top);\n          $controlsidebarContent.css('height', heights.window - (heights.header - positions.top));\n        } else {\n          $controlSidebar.css('top', heights.header);\n        }\n      } else if (navbarFixed === false) {\n        $controlSidebar.css('top', 0);\n        $controlsidebarContent.css('height', heights.window);\n      } else {\n        $controlSidebar.css('top', heights.header);\n      }\n      if (footerFixed && navbarFixed) {\n        $controlsidebarContent.css('height', '100%');\n        $controlSidebar.css('height', '');\n      } else if (footerFixed || navbarFixed) {\n        $controlsidebarContent.css('height', '100%');\n        $controlsidebarContent.css('height', '');\n      }\n    };\n    _proto._fixHeight = function _fixHeight() {\n      var $body = $__default[\"default\"]('body');\n      var $controlSidebar = $__default[\"default\"](this._config.target + \" \" + SELECTOR_CONTROL_SIDEBAR_CONTENT$1);\n      if (!$body.hasClass(CLASS_NAME_LAYOUT_FIXED$1)) {\n        $controlSidebar.attr('style', '');\n        return;\n      }\n      var heights = {\n        window: $__default[\"default\"](window).height(),\n        header: $__default[\"default\"](SELECTOR_HEADER$1).outerHeight(),\n        footer: $__default[\"default\"](SELECTOR_FOOTER$1).outerHeight()\n      };\n      var sidebarHeight = heights.window - heights.header;\n      if (this._isFooterFixed() && $__default[\"default\"](SELECTOR_FOOTER$1).css('position') === 'fixed') {\n        sidebarHeight = heights.window - heights.header - heights.footer;\n      }\n      $controlSidebar.css('height', sidebarHeight);\n      if (typeof $__default[\"default\"].fn.overlayScrollbars !== 'undefined') {\n        $controlSidebar.overlayScrollbars({\n          className: this._config.scrollbarTheme,\n          sizeAutoCapable: true,\n          scrollbars: {\n            autoHide: this._config.scrollbarAutoHide,\n            clickScrolling: true\n          }\n        });\n      }\n    } // Static\n    ;\n\n    ControlSidebar._jQueryInterface = function _jQueryInterface(operation) {\n      return this.each(function () {\n        var data = $__default[\"default\"](this).data(DATA_KEY$c);\n        var _options = $__default[\"default\"].extend({}, Default$a, $__default[\"default\"](this).data());\n        if (!data) {\n          data = new ControlSidebar(this, _options);\n          $__default[\"default\"](this).data(DATA_KEY$c, data);\n        }\n        if (data[operation] === 'undefined') {\n          throw new Error(operation + \" is not a function\");\n        }\n        data[operation]();\n      });\n    };\n    return ControlSidebar;\n  }();\n  /**\n   *\n   * Data Api implementation\n   * ====================================================\n   */\n\n  $__default[\"default\"](document).on('click', SELECTOR_DATA_TOGGLE$4, function (event) {\n    event.preventDefault();\n    ControlSidebar._jQueryInterface.call($__default[\"default\"](this), 'toggle');\n  });\n  $__default[\"default\"](document).ready(function () {\n    ControlSidebar._jQueryInterface.call($__default[\"default\"](SELECTOR_DATA_TOGGLE$4), '_init');\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$c] = ControlSidebar._jQueryInterface;\n  $__default[\"default\"].fn[NAME$c].Constructor = ControlSidebar;\n  $__default[\"default\"].fn[NAME$c].noConflict = function () {\n    $__default[\"default\"].fn[NAME$c] = JQUERY_NO_CONFLICT$c;\n    return ControlSidebar._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE DirectChat.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$b = 'DirectChat';\n  var DATA_KEY$b = 'lte.directchat';\n  var EVENT_KEY$4 = \".\" + DATA_KEY$b;\n  var JQUERY_NO_CONFLICT$b = $__default[\"default\"].fn[NAME$b];\n  var EVENT_TOGGLED = \"toggled\" + EVENT_KEY$4;\n  var SELECTOR_DATA_TOGGLE$3 = '[data-widget=\"chat-pane-toggle\"]';\n  var SELECTOR_DIRECT_CHAT = '.direct-chat';\n  var CLASS_NAME_DIRECT_CHAT_OPEN = 'direct-chat-contacts-open';\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var DirectChat = /*#__PURE__*/function () {\n    function DirectChat(element) {\n      this._element = element;\n    }\n    var _proto = DirectChat.prototype;\n    _proto.toggle = function toggle() {\n      $__default[\"default\"](this._element).parents(SELECTOR_DIRECT_CHAT).first().toggleClass(CLASS_NAME_DIRECT_CHAT_OPEN);\n      $__default[\"default\"](this._element).trigger($__default[\"default\"].Event(EVENT_TOGGLED));\n    } // Static\n    ;\n\n    DirectChat._jQueryInterface = function _jQueryInterface(config) {\n      return this.each(function () {\n        var data = $__default[\"default\"](this).data(DATA_KEY$b);\n        if (!data) {\n          data = new DirectChat($__default[\"default\"](this));\n          $__default[\"default\"](this).data(DATA_KEY$b, data);\n        }\n        data[config]();\n      });\n    };\n    return DirectChat;\n  }();\n  /**\n   *\n   * Data Api implementation\n   * ====================================================\n   */\n\n  $__default[\"default\"](document).on('click', SELECTOR_DATA_TOGGLE$3, function (event) {\n    if (event) {\n      event.preventDefault();\n    }\n    DirectChat._jQueryInterface.call($__default[\"default\"](this), 'toggle');\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$b] = DirectChat._jQueryInterface;\n  $__default[\"default\"].fn[NAME$b].Constructor = DirectChat;\n  $__default[\"default\"].fn[NAME$b].noConflict = function () {\n    $__default[\"default\"].fn[NAME$b] = JQUERY_NO_CONFLICT$b;\n    return DirectChat._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE Dropdown.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$a = 'Dropdown';\n  var DATA_KEY$a = 'lte.dropdown';\n  var JQUERY_NO_CONFLICT$a = $__default[\"default\"].fn[NAME$a];\n  var SELECTOR_NAVBAR = '.navbar';\n  var SELECTOR_DROPDOWN_MENU = '.dropdown-menu';\n  var SELECTOR_DROPDOWN_MENU_ACTIVE = '.dropdown-menu.show';\n  var SELECTOR_DROPDOWN_TOGGLE = '[data-toggle=\"dropdown\"]';\n  var CLASS_NAME_DROPDOWN_RIGHT = 'dropdown-menu-right';\n  var CLASS_NAME_DROPDOWN_SUBMENU = 'dropdown-submenu'; // TODO: this is unused; should be removed along with the extend?\n\n  var Default$9 = {};\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var Dropdown = /*#__PURE__*/function () {\n    function Dropdown(element, config) {\n      this._config = config;\n      this._element = element;\n    } // Public\n\n    var _proto = Dropdown.prototype;\n    _proto.toggleSubmenu = function toggleSubmenu() {\n      this._element.siblings().show().toggleClass('show');\n      if (!this._element.next().hasClass('show')) {\n        this._element.parents(SELECTOR_DROPDOWN_MENU).first().find('.show').removeClass('show').hide();\n      }\n      this._element.parents('li.navigation-item.dropdown.show').on('hidden.bs.dropdown', function () {\n        $__default[\"default\"]('.dropdown-submenu .show').removeClass('show').hide();\n      });\n    };\n    _proto.fixPosition = function fixPosition() {\n      var $element = $__default[\"default\"](SELECTOR_DROPDOWN_MENU_ACTIVE);\n      if ($element.length === 0) {\n        return;\n      }\n      if ($element.hasClass(CLASS_NAME_DROPDOWN_RIGHT)) {\n        $element.css({\n          left: 'inherit',\n          right: 0\n        });\n      } else {\n        $element.css({\n          left: 0,\n          right: 'inherit'\n        });\n      }\n      var offset = $element.offset();\n      var width = $element.width();\n      var visiblePart = $__default[\"default\"](window).width() - offset.left;\n      if (offset.left < 0) {\n        $element.css({\n          left: 'inherit',\n          right: offset.left - 5\n        });\n      } else if (visiblePart < width) {\n        $element.css({\n          left: 'inherit',\n          right: 0\n        });\n      }\n    } // Static\n    ;\n\n    Dropdown._jQueryInterface = function _jQueryInterface(config) {\n      return this.each(function () {\n        var data = $__default[\"default\"](this).data(DATA_KEY$a);\n        var _config = $__default[\"default\"].extend({}, Default$9, $__default[\"default\"](this).data());\n        if (!data) {\n          data = new Dropdown($__default[\"default\"](this), _config);\n          $__default[\"default\"](this).data(DATA_KEY$a, data);\n        }\n        if (config === 'toggleSubmenu' || config === 'fixPosition') {\n          data[config]();\n        }\n      });\n    };\n    return Dropdown;\n  }();\n  /**\n   * Data API\n   * ====================================================\n   */\n\n  $__default[\"default\"](SELECTOR_DROPDOWN_MENU + \" \" + SELECTOR_DROPDOWN_TOGGLE).on('click', function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    Dropdown._jQueryInterface.call($__default[\"default\"](this), 'toggleSubmenu');\n  });\n  $__default[\"default\"](SELECTOR_NAVBAR + \" \" + SELECTOR_DROPDOWN_TOGGLE).on('click', function (event) {\n    event.preventDefault();\n    if ($__default[\"default\"](event.target).parent().hasClass(CLASS_NAME_DROPDOWN_SUBMENU)) {\n      return;\n    }\n    setTimeout(function () {\n      Dropdown._jQueryInterface.call($__default[\"default\"](this), 'fixPosition');\n    }, 1);\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$a] = Dropdown._jQueryInterface;\n  $__default[\"default\"].fn[NAME$a].Constructor = Dropdown;\n  $__default[\"default\"].fn[NAME$a].noConflict = function () {\n    $__default[\"default\"].fn[NAME$a] = JQUERY_NO_CONFLICT$a;\n    return Dropdown._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE ExpandableTable.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n    * Constants\n    * ====================================================\n    */\n\n  var NAME$9 = 'ExpandableTable';\n  var DATA_KEY$9 = 'lte.expandableTable';\n  var EVENT_KEY$3 = \".\" + DATA_KEY$9;\n  var JQUERY_NO_CONFLICT$9 = $__default[\"default\"].fn[NAME$9];\n  var EVENT_EXPANDED$1 = \"expanded\" + EVENT_KEY$3;\n  var EVENT_COLLAPSED$2 = \"collapsed\" + EVENT_KEY$3;\n  var SELECTOR_TABLE = '.expandable-table';\n  var SELECTOR_EXPANDABLE_BODY = '.expandable-body';\n  var SELECTOR_DATA_TOGGLE$2 = '[data-widget=\"expandable-table\"]';\n  var SELECTOR_ARIA_ATTR = 'aria-expanded';\n  /**\n    * Class Definition\n    * ====================================================\n    */\n\n  var ExpandableTable = /*#__PURE__*/function () {\n    function ExpandableTable(element, options) {\n      this._options = options;\n      this._element = element;\n    } // Public\n\n    var _proto = ExpandableTable.prototype;\n    _proto.init = function init() {\n      $__default[\"default\"](SELECTOR_DATA_TOGGLE$2).each(function (_, $header) {\n        var $type = $__default[\"default\"]($header).attr(SELECTOR_ARIA_ATTR);\n        var $body = $__default[\"default\"]($header).next(SELECTOR_EXPANDABLE_BODY).children().first().children();\n        if ($type === 'true') {\n          $body.show();\n        } else if ($type === 'false') {\n          $body.hide();\n          $body.parent().parent().addClass('d-none');\n        }\n      });\n    };\n    _proto.toggleRow = function toggleRow() {\n      var $element = this._element;\n      if ($element[0].nodeName !== 'TR') {\n        $element = $element.parent();\n        if ($element[0].nodeName !== 'TR') {\n          $element = $element.parent();\n        }\n      }\n      var time = 500;\n      var $type = $element.attr(SELECTOR_ARIA_ATTR);\n      var $body = $element.next(SELECTOR_EXPANDABLE_BODY).children().first().children();\n      $body.stop();\n      if ($type === 'true') {\n        $body.slideUp(time, function () {\n          $element.next(SELECTOR_EXPANDABLE_BODY).addClass('d-none');\n        });\n        $element.attr(SELECTOR_ARIA_ATTR, 'false');\n        $element.trigger($__default[\"default\"].Event(EVENT_COLLAPSED$2));\n      } else if ($type === 'false') {\n        $element.next(SELECTOR_EXPANDABLE_BODY).removeClass('d-none');\n        $body.slideDown(time);\n        $element.attr(SELECTOR_ARIA_ATTR, 'true');\n        $element.trigger($__default[\"default\"].Event(EVENT_EXPANDED$1));\n      }\n    } // Static\n    ;\n\n    ExpandableTable._jQueryInterface = function _jQueryInterface(operation) {\n      return this.each(function () {\n        var data = $__default[\"default\"](this).data(DATA_KEY$9);\n        if (!data) {\n          data = new ExpandableTable($__default[\"default\"](this));\n          $__default[\"default\"](this).data(DATA_KEY$9, data);\n        }\n        if (typeof operation === 'string' && /init|toggleRow/.test(operation)) {\n          data[operation]();\n        }\n      });\n    };\n    return ExpandableTable;\n  }();\n  /**\n    * Data API\n    * ====================================================\n    */\n\n  $__default[\"default\"](SELECTOR_TABLE).ready(function () {\n    ExpandableTable._jQueryInterface.call($__default[\"default\"](this), 'init');\n  });\n  $__default[\"default\"](document).on('click', SELECTOR_DATA_TOGGLE$2, function () {\n    ExpandableTable._jQueryInterface.call($__default[\"default\"](this), 'toggleRow');\n  });\n  /**\n    * jQuery API\n    * ====================================================\n    */\n\n  $__default[\"default\"].fn[NAME$9] = ExpandableTable._jQueryInterface;\n  $__default[\"default\"].fn[NAME$9].Constructor = ExpandableTable;\n  $__default[\"default\"].fn[NAME$9].noConflict = function () {\n    $__default[\"default\"].fn[NAME$9] = JQUERY_NO_CONFLICT$9;\n    return ExpandableTable._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE Fullscreen.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$8 = 'Fullscreen';\n  var DATA_KEY$8 = 'lte.fullscreen';\n  var JQUERY_NO_CONFLICT$8 = $__default[\"default\"].fn[NAME$8];\n  var SELECTOR_DATA_WIDGET$2 = '[data-widget=\"fullscreen\"]';\n  var SELECTOR_ICON = SELECTOR_DATA_WIDGET$2 + \" i\";\n  var EVENT_FULLSCREEN_CHANGE = 'webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange';\n  var Default$8 = {\n    minimizeIcon: 'fa-compress-arrows-alt',\n    maximizeIcon: 'fa-expand-arrows-alt'\n  };\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var Fullscreen = /*#__PURE__*/function () {\n    function Fullscreen(_element, _options) {\n      this.element = _element;\n      this.options = $__default[\"default\"].extend({}, Default$8, _options);\n    } // Public\n\n    var _proto = Fullscreen.prototype;\n    _proto.toggle = function toggle() {\n      if (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement) {\n        this.windowed();\n      } else {\n        this.fullscreen();\n      }\n    };\n    _proto.toggleIcon = function toggleIcon() {\n      if (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement) {\n        $__default[\"default\"](SELECTOR_ICON).removeClass(this.options.maximizeIcon).addClass(this.options.minimizeIcon);\n      } else {\n        $__default[\"default\"](SELECTOR_ICON).removeClass(this.options.minimizeIcon).addClass(this.options.maximizeIcon);\n      }\n    };\n    _proto.fullscreen = function fullscreen() {\n      if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen();\n      } else if (document.documentElement.webkitRequestFullscreen) {\n        document.documentElement.webkitRequestFullscreen();\n      } else if (document.documentElement.msRequestFullscreen) {\n        document.documentElement.msRequestFullscreen();\n      }\n    };\n    _proto.windowed = function windowed() {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n    } // Static\n    ;\n\n    Fullscreen._jQueryInterface = function _jQueryInterface(config) {\n      var data = $__default[\"default\"](this).data(DATA_KEY$8);\n      if (!data) {\n        data = $__default[\"default\"](this).data();\n      }\n      var _options = $__default[\"default\"].extend({}, Default$8, _typeof(config) === 'object' ? config : data);\n      var plugin = new Fullscreen($__default[\"default\"](this), _options);\n      $__default[\"default\"](this).data(DATA_KEY$8, _typeof(config) === 'object' ? config : data);\n      if (typeof config === 'string' && /toggle|toggleIcon|fullscreen|windowed/.test(config)) {\n        plugin[config]();\n      } else {\n        plugin.init();\n      }\n    };\n    return Fullscreen;\n  }();\n  /**\n    * Data API\n    * ====================================================\n    */\n\n  $__default[\"default\"](document).on('click', SELECTOR_DATA_WIDGET$2, function () {\n    Fullscreen._jQueryInterface.call($__default[\"default\"](this), 'toggle');\n  });\n  $__default[\"default\"](document).on(EVENT_FULLSCREEN_CHANGE, function () {\n    Fullscreen._jQueryInterface.call($__default[\"default\"](SELECTOR_DATA_WIDGET$2), 'toggleIcon');\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$8] = Fullscreen._jQueryInterface;\n  $__default[\"default\"].fn[NAME$8].Constructor = Fullscreen;\n  $__default[\"default\"].fn[NAME$8].noConflict = function () {\n    $__default[\"default\"].fn[NAME$8] = JQUERY_NO_CONFLICT$8;\n    return Fullscreen._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE IFrame.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$7 = 'IFrame';\n  var DATA_KEY$7 = 'lte.iframe';\n  var JQUERY_NO_CONFLICT$7 = $__default[\"default\"].fn[NAME$7];\n  var SELECTOR_DATA_TOGGLE$1 = '[data-widget=\"iframe\"]';\n  var SELECTOR_DATA_TOGGLE_CLOSE = '[data-widget=\"iframe-close\"]';\n  var SELECTOR_DATA_TOGGLE_SCROLL_LEFT = '[data-widget=\"iframe-scrollleft\"]';\n  var SELECTOR_DATA_TOGGLE_SCROLL_RIGHT = '[data-widget=\"iframe-scrollright\"]';\n  var SELECTOR_DATA_TOGGLE_FULLSCREEN = '[data-widget=\"iframe-fullscreen\"]';\n  var SELECTOR_CONTENT_WRAPPER = '.content-wrapper';\n  var SELECTOR_CONTENT_IFRAME = SELECTOR_CONTENT_WRAPPER + \" iframe\";\n  var SELECTOR_TAB_NAV = SELECTOR_CONTENT_WRAPPER + \".iframe-mode .navigation\";\n  var SELECTOR_TAB_NAVBAR_NAV = SELECTOR_CONTENT_WRAPPER + \".iframe-mode .navbar-navigation\";\n  var SELECTOR_TAB_NAVBAR_NAV_ITEM = SELECTOR_TAB_NAVBAR_NAV + \" .navigation-item\";\n  var SELECTOR_TAB_NAVBAR_NAV_LINK = SELECTOR_TAB_NAVBAR_NAV + \" .navigation-link\";\n  var SELECTOR_TAB_CONTENT = SELECTOR_CONTENT_WRAPPER + \".iframe-mode .tab-content\";\n  var SELECTOR_TAB_EMPTY = SELECTOR_TAB_CONTENT + \" .tab-empty\";\n  var SELECTOR_TAB_LOADING = SELECTOR_TAB_CONTENT + \" .tab-loading\";\n  var SELECTOR_TAB_PANE = SELECTOR_TAB_CONTENT + \" .tab-pane\";\n  var SELECTOR_SIDEBAR_MENU_ITEM = '.main-sidebar .navigation-item > a.navigation-link';\n  var SELECTOR_SIDEBAR_SEARCH_ITEM = '.sidebar-search-results .list-group-item';\n  var SELECTOR_HEADER_MENU_ITEM = '.main-header .navigation-item a.navigation-link';\n  var SELECTOR_HEADER_DROPDOWN_ITEM = '.main-header a.dropdown-item';\n  var CLASS_NAME_IFRAME_MODE$1 = 'iframe-mode';\n  var CLASS_NAME_FULLSCREEN_MODE = 'iframe-mode-fullscreen';\n  var Default$7 = {\n    onTabClick: function onTabClick(item) {\n      return item;\n    },\n    onTabChanged: function onTabChanged(item) {\n      return item;\n    },\n    onTabCreated: function onTabCreated(item) {\n      return item;\n    },\n    autoIframeMode: true,\n    autoItemActive: true,\n    autoShowNewTab: true,\n    autoDarkMode: false,\n    allowDuplicates: false,\n    allowReload: true,\n    loadingScreen: true,\n    useNavbarItems: true,\n    scrollOffset: 40,\n    scrollBehaviorSwap: false,\n    iconMaximize: 'fa-expand',\n    iconMinimize: 'fa-compress'\n  };\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var IFrame = /*#__PURE__*/function () {\n    function IFrame(element, config) {\n      this._config = config;\n      this._element = element;\n      this._init();\n    } // Public\n\n    var _proto = IFrame.prototype;\n    _proto.onTabClick = function onTabClick(item) {\n      this._config.onTabClick(item);\n    };\n    _proto.onTabChanged = function onTabChanged(item) {\n      this._config.onTabChanged(item);\n    };\n    _proto.onTabCreated = function onTabCreated(item) {\n      this._config.onTabCreated(item);\n    };\n    _proto.createTab = function createTab(title, link, uniqueName, autoOpen) {\n      var _this = this;\n      var tabId = \"panel-\" + uniqueName;\n      var navId = \"tab-\" + uniqueName;\n      if (this._config.allowDuplicates) {\n        tabId += \"-\" + Math.floor(Math.random() * 1000);\n        navId += \"-\" + Math.floor(Math.random() * 1000);\n      }\n      var newNavItem = \"<li class=\\\"navigation-item\\\" role=\\\"presentation\\\"><a href=\\\"#\\\" class=\\\"btn-iframe-close\\\" data-widget=\\\"iframe-close\\\" data-type=\\\"only-this\\\"><i class=\\\"fas fa-times\\\"></i></a><a class=\\\"navigation-link\\\" data-toggle=\\\"row\\\" id=\\\"\" + navId + \"\\\" href=\\\"#\" + tabId + \"\\\" role=\\\"tab\\\" aria-controls=\\\"\" + tabId + \"\\\" aria-selected=\\\"false\\\">\" + title + \"</a></li>\";\n      $__default[\"default\"](SELECTOR_TAB_NAVBAR_NAV).append(unescape(escape(newNavItem)));\n      var newTabItem = \"<div class=\\\"tab-pane fade\\\" id=\\\"\" + tabId + \"\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"\" + navId + \"\\\"><iframe src=\\\"\" + link + \"\\\"></iframe></div>\";\n      $__default[\"default\"](SELECTOR_TAB_CONTENT).append(unescape(escape(newTabItem)));\n      if (autoOpen) {\n        if (this._config.loadingScreen) {\n          var $loadingScreen = $__default[\"default\"](SELECTOR_TAB_LOADING);\n          $loadingScreen.fadeIn();\n          $__default[\"default\"](tabId + \" iframe\").ready(function () {\n            if (typeof _this._config.loadingScreen === 'number') {\n              _this.switchTab(\"#\" + navId);\n              setTimeout(function () {\n                $loadingScreen.fadeOut();\n              }, _this._config.loadingScreen);\n            } else {\n              _this.switchTab(\"#\" + navId);\n              $loadingScreen.fadeOut();\n            }\n          });\n        } else {\n          this.switchTab(\"#\" + navId);\n        }\n      }\n      this.onTabCreated($__default[\"default\"](\"#\" + navId));\n    };\n    _proto.openTabSidebar = function openTabSidebar(item, autoOpen) {\n      if (autoOpen === void 0) {\n        autoOpen = this._config.autoShowNewTab;\n      }\n      var $item = $__default[\"default\"](item).clone();\n      if ($item.attr('href') === undefined) {\n        $item = $__default[\"default\"](item).parent('a').clone();\n      }\n      $item.find('.right, .search-path').remove();\n      var title = $item.find('p').text();\n      if (title === '') {\n        title = $item.text();\n      }\n      var link = $item.attr('href');\n      if (link === '#' || link === '' || link === undefined) {\n        return;\n      }\n      var uniqueName = unescape(link).replace('./', '').replace(/[\"#&'./:=?[\\]]/gi, '-').replace(/(--)/gi, '');\n      var navId = \"tab-\" + uniqueName;\n      if (!this._config.allowDuplicates && $__default[\"default\"](\"#\" + navId).length > 0) {\n        return this.switchTab(\"#\" + navId, this._config.allowReload);\n      }\n      if (!this._config.allowDuplicates && $__default[\"default\"](\"#\" + navId).length === 0 || this._config.allowDuplicates) {\n        this.createTab(title, link, uniqueName, autoOpen);\n      }\n    };\n    _proto.switchTab = function switchTab(item, reload) {\n      var _this2 = this;\n      if (reload === void 0) {\n        reload = false;\n      }\n      var $item = $__default[\"default\"](item);\n      var tabId = $item.attr('href');\n      $__default[\"default\"](SELECTOR_TAB_EMPTY).hide();\n      if (reload) {\n        var $loadingScreen = $__default[\"default\"](SELECTOR_TAB_LOADING);\n        if (this._config.loadingScreen) {\n          $loadingScreen.show(0, function () {\n            $__default[\"default\"](tabId + \" iframe\").attr('src', $__default[\"default\"](tabId + \" iframe\").attr('src')).ready(function () {\n              if (_this2._config.loadingScreen) {\n                if (typeof _this2._config.loadingScreen === 'number') {\n                  setTimeout(function () {\n                    $loadingScreen.fadeOut();\n                  }, _this2._config.loadingScreen);\n                } else {\n                  $loadingScreen.fadeOut();\n                }\n              }\n            });\n          });\n        } else {\n          $__default[\"default\"](tabId + \" iframe\").attr('src', $__default[\"default\"](tabId + \" iframe\").attr('src'));\n        }\n      }\n      $__default[\"default\"](SELECTOR_TAB_NAVBAR_NAV + \" .active\").tab('dispose').removeClass('active');\n      this._fixHeight();\n      $item.tab('show');\n      $item.parents('li').addClass('active');\n      this.onTabChanged($item);\n      if (this._config.autoItemActive) {\n        this._setItemActive($__default[\"default\"](tabId + \" iframe\").attr('src'));\n      }\n    };\n    _proto.removeActiveTab = function removeActiveTab(type, element) {\n      if (type == 'all') {\n        $__default[\"default\"](SELECTOR_TAB_NAVBAR_NAV_ITEM).remove();\n        $__default[\"default\"](SELECTOR_TAB_PANE).remove();\n        $__default[\"default\"](SELECTOR_TAB_EMPTY).show();\n      } else if (type == 'all-other') {\n        $__default[\"default\"](SELECTOR_TAB_NAVBAR_NAV_ITEM + \":not(.active)\").remove();\n        $__default[\"default\"](SELECTOR_TAB_PANE + \":not(.active)\").remove();\n      } else if (type == 'only-this') {\n        var $navClose = $__default[\"default\"](element);\n        var $navItem = $navClose.parent('.navigation-item');\n        var $navItemParent = $navItem.parent();\n        var navItemIndex = $navItem.index();\n        var tabId = $navClose.siblings('.navigation-link').attr('aria-controls');\n        $navItem.remove();\n        $__default[\"default\"](\"#\" + tabId).remove();\n        if ($__default[\"default\"](SELECTOR_TAB_CONTENT).children().length == $__default[\"default\"](SELECTOR_TAB_EMPTY + \", \" + SELECTOR_TAB_LOADING).length) {\n          $__default[\"default\"](SELECTOR_TAB_EMPTY).show();\n        } else {\n          var prevNavItemIndex = navItemIndex - 1;\n          this.switchTab($navItemParent.children().eq(prevNavItemIndex).find('a.navigation-link'));\n        }\n      } else {\n        var _$navItem = $__default[\"default\"](SELECTOR_TAB_NAVBAR_NAV_ITEM + \".active\");\n        var _$navItemParent = _$navItem.parent();\n        var _navItemIndex = _$navItem.index();\n        _$navItem.remove();\n        $__default[\"default\"](SELECTOR_TAB_PANE + \".active\").remove();\n        if ($__default[\"default\"](SELECTOR_TAB_CONTENT).children().length == $__default[\"default\"](SELECTOR_TAB_EMPTY + \", \" + SELECTOR_TAB_LOADING).length) {\n          $__default[\"default\"](SELECTOR_TAB_EMPTY).show();\n        } else {\n          var _prevNavItemIndex = _navItemIndex - 1;\n          this.switchTab(_$navItemParent.children().eq(_prevNavItemIndex).find('a.navigation-link'));\n        }\n      }\n    };\n    _proto.toggleFullscreen = function toggleFullscreen() {\n      if ($__default[\"default\"]('body').hasClass(CLASS_NAME_FULLSCREEN_MODE)) {\n        $__default[\"default\"](SELECTOR_DATA_TOGGLE_FULLSCREEN + \" i\").removeClass(this._config.iconMinimize).addClass(this._config.iconMaximize);\n        $__default[\"default\"]('body').removeClass(CLASS_NAME_FULLSCREEN_MODE);\n        $__default[\"default\"](SELECTOR_TAB_EMPTY + \", \" + SELECTOR_TAB_LOADING).height('100%');\n        $__default[\"default\"](SELECTOR_CONTENT_WRAPPER).height('100%');\n        $__default[\"default\"](SELECTOR_CONTENT_IFRAME).height('100%');\n      } else {\n        $__default[\"default\"](SELECTOR_DATA_TOGGLE_FULLSCREEN + \" i\").removeClass(this._config.iconMaximize).addClass(this._config.iconMinimize);\n        $__default[\"default\"]('body').addClass(CLASS_NAME_FULLSCREEN_MODE);\n      }\n      $__default[\"default\"](window).trigger('resize');\n      this._fixHeight(true);\n    } // Private\n    ;\n\n    _proto._init = function _init() {\n      var usingDefTab = $__default[\"default\"](SELECTOR_TAB_CONTENT).children().length > 2;\n      this._setupListeners();\n      this._fixHeight(true);\n      if (usingDefTab) {\n        var $el = $__default[\"default\"](\"\" + SELECTOR_TAB_PANE).first(); // eslint-disable-next-line no-console\n\n        console.log($el);\n        var uniqueName = $el.attr('id').replace('panel-', '');\n        var navId = \"#tab-\" + uniqueName;\n        this.switchTab(navId, true);\n      }\n    };\n    _proto._initFrameElement = function _initFrameElement() {\n      if (window.frameElement && this._config.autoIframeMode) {\n        var $body = $__default[\"default\"]('body');\n        $body.addClass(CLASS_NAME_IFRAME_MODE$1);\n        if (this._config.autoDarkMode) {\n          $body.addClass('dark-mode');\n        }\n      }\n    };\n    _proto._navScroll = function _navScroll(offset) {\n      var leftPos = $__default[\"default\"](SELECTOR_TAB_NAVBAR_NAV).scrollLeft();\n      $__default[\"default\"](SELECTOR_TAB_NAVBAR_NAV).animate({\n        scrollLeft: leftPos + offset\n      }, 250, 'linear');\n    };\n    _proto._setupListeners = function _setupListeners() {\n      var _this3 = this;\n      $__default[\"default\"](window).on('resize', function () {\n        setTimeout(function () {\n          _this3._fixHeight();\n        }, 1);\n      });\n      if ($__default[\"default\"](SELECTOR_CONTENT_WRAPPER).hasClass(CLASS_NAME_IFRAME_MODE$1)) {\n        $__default[\"default\"](document).on('click', SELECTOR_SIDEBAR_MENU_ITEM + \", \" + SELECTOR_SIDEBAR_SEARCH_ITEM, function (e) {\n          e.preventDefault();\n          _this3.openTabSidebar(e.target);\n        });\n        if (this._config.useNavbarItems) {\n          $__default[\"default\"](document).on('click', SELECTOR_HEADER_MENU_ITEM + \", \" + SELECTOR_HEADER_DROPDOWN_ITEM, function (e) {\n            e.preventDefault();\n            _this3.openTabSidebar(e.target);\n          });\n        }\n      }\n      $__default[\"default\"](document).on('click', SELECTOR_TAB_NAVBAR_NAV_LINK, function (e) {\n        e.preventDefault();\n        _this3.onTabClick(e.target);\n        _this3.switchTab(e.target);\n      });\n      $__default[\"default\"](document).on('click', SELECTOR_TAB_NAVBAR_NAV_LINK, function (e) {\n        e.preventDefault();\n        _this3.onTabClick(e.target);\n        _this3.switchTab(e.target);\n      });\n      $__default[\"default\"](document).on('click', SELECTOR_DATA_TOGGLE_CLOSE, function (e) {\n        e.preventDefault();\n        var target = e.target;\n        if (target.nodeName == 'I') {\n          target = e.target.offsetParent;\n        }\n        _this3.removeActiveTab(target.attributes['data-type'] ? target.attributes['data-type'].nodeValue : null, target);\n      });\n      $__default[\"default\"](document).on('click', SELECTOR_DATA_TOGGLE_FULLSCREEN, function (e) {\n        e.preventDefault();\n        _this3.toggleFullscreen();\n      });\n      var mousedown = false;\n      var mousedownInterval = null;\n      $__default[\"default\"](document).on('mousedown', SELECTOR_DATA_TOGGLE_SCROLL_LEFT, function (e) {\n        e.preventDefault();\n        clearInterval(mousedownInterval);\n        var scrollOffset = _this3._config.scrollOffset;\n        if (!_this3._config.scrollBehaviorSwap) {\n          scrollOffset = -scrollOffset;\n        }\n        mousedown = true;\n        _this3._navScroll(scrollOffset);\n        mousedownInterval = setInterval(function () {\n          _this3._navScroll(scrollOffset);\n        }, 250);\n      });\n      $__default[\"default\"](document).on('mousedown', SELECTOR_DATA_TOGGLE_SCROLL_RIGHT, function (e) {\n        e.preventDefault();\n        clearInterval(mousedownInterval);\n        var scrollOffset = _this3._config.scrollOffset;\n        if (_this3._config.scrollBehaviorSwap) {\n          scrollOffset = -scrollOffset;\n        }\n        mousedown = true;\n        _this3._navScroll(scrollOffset);\n        mousedownInterval = setInterval(function () {\n          _this3._navScroll(scrollOffset);\n        }, 250);\n      });\n      $__default[\"default\"](document).on('mouseup', function () {\n        if (mousedown) {\n          mousedown = false;\n          clearInterval(mousedownInterval);\n          mousedownInterval = null;\n        }\n      });\n    };\n    _proto._setItemActive = function _setItemActive(href) {\n      $__default[\"default\"](SELECTOR_SIDEBAR_MENU_ITEM + \", \" + SELECTOR_HEADER_DROPDOWN_ITEM).removeClass('active');\n      $__default[\"default\"](SELECTOR_HEADER_MENU_ITEM).parent().removeClass('active');\n      var $headerMenuItem = $__default[\"default\"](SELECTOR_HEADER_MENU_ITEM + \"[href$=\\\"\" + href + \"\\\"]\");\n      var $headerDropdownItem = $__default[\"default\"](SELECTOR_HEADER_DROPDOWN_ITEM + \"[href$=\\\"\" + href + \"\\\"]\");\n      var $sidebarMenuItem = $__default[\"default\"](SELECTOR_SIDEBAR_MENU_ITEM + \"[href$=\\\"\" + href + \"\\\"]\");\n      $headerMenuItem.each(function (i, e) {\n        $__default[\"default\"](e).parent().addClass('active');\n      });\n      $headerDropdownItem.each(function (i, e) {\n        $__default[\"default\"](e).addClass('active');\n      });\n      $sidebarMenuItem.each(function (i, e) {\n        $__default[\"default\"](e).addClass('active');\n        $__default[\"default\"](e).parents('.navigation-treeview').prevAll('.navigation-link').addClass('active');\n      });\n    };\n    _proto._fixHeight = function _fixHeight(tabEmpty) {\n      if (tabEmpty === void 0) {\n        tabEmpty = false;\n      }\n      if ($__default[\"default\"]('body').hasClass(CLASS_NAME_FULLSCREEN_MODE)) {\n        var windowHeight = $__default[\"default\"](window).height();\n        var navbarHeight = $__default[\"default\"](SELECTOR_TAB_NAV).outerHeight();\n        $__default[\"default\"](SELECTOR_TAB_EMPTY + \", \" + SELECTOR_TAB_LOADING + \", \" + SELECTOR_CONTENT_IFRAME).height(windowHeight - navbarHeight);\n        $__default[\"default\"](SELECTOR_CONTENT_WRAPPER).height(windowHeight);\n      } else {\n        var contentWrapperHeight = parseFloat($__default[\"default\"](SELECTOR_CONTENT_WRAPPER).css('height'));\n        var _navbarHeight = $__default[\"default\"](SELECTOR_TAB_NAV).outerHeight();\n        if (tabEmpty == true) {\n          setTimeout(function () {\n            $__default[\"default\"](SELECTOR_TAB_EMPTY + \", \" + SELECTOR_TAB_LOADING).height(contentWrapperHeight - _navbarHeight);\n          }, 50);\n        } else {\n          $__default[\"default\"](SELECTOR_CONTENT_IFRAME).height(contentWrapperHeight - _navbarHeight);\n        }\n      }\n    } // Static\n    ;\n\n    IFrame._jQueryInterface = function _jQueryInterface(config) {\n      if ($__default[\"default\"](SELECTOR_DATA_TOGGLE$1).length > 0) {\n        var data = $__default[\"default\"](this).data(DATA_KEY$7);\n        if (!data) {\n          data = $__default[\"default\"](this).data();\n        }\n        var _options = $__default[\"default\"].extend({}, Default$7, _typeof(config) === 'object' ? config : data);\n        localStorage.setItem('AdminLTE:IFrame:Options', JSON.stringify(_options));\n        var plugin = new IFrame($__default[\"default\"](this), _options);\n        $__default[\"default\"](this).data(DATA_KEY$7, _typeof(config) === 'object' ? config : data);\n        if (typeof config === 'string' && /createTab|openTabSidebar|switchTab|removeActiveTab/.test(config)) {\n          plugin[config]();\n        }\n      } else {\n        new IFrame($__default[\"default\"](this), JSON.parse(localStorage.getItem('AdminLTE:IFrame:Options')))._initFrameElement();\n      }\n    };\n    return IFrame;\n  }();\n  /**\n   * Data API\n   * ====================================================\n   */\n\n  $__default[\"default\"](window).on('load', function () {\n    IFrame._jQueryInterface.call($__default[\"default\"](SELECTOR_DATA_TOGGLE$1));\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$7] = IFrame._jQueryInterface;\n  $__default[\"default\"].fn[NAME$7].Constructor = IFrame;\n  $__default[\"default\"].fn[NAME$7].noConflict = function () {\n    $__default[\"default\"].fn[NAME$7] = JQUERY_NO_CONFLICT$7;\n    return IFrame._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE Layout.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$6 = 'Layout';\n  var DATA_KEY$6 = 'lte.layout';\n  var JQUERY_NO_CONFLICT$6 = $__default[\"default\"].fn[NAME$6];\n  var SELECTOR_HEADER = '.main-header';\n  var SELECTOR_MAIN_SIDEBAR = '.main-sidebar';\n  var SELECTOR_SIDEBAR$1 = '.main-sidebar .sidebar';\n  var SELECTOR_CONTENT = '.content-wrapper';\n  var SELECTOR_CONTROL_SIDEBAR_CONTENT = '.control-sidebar-content';\n  var SELECTOR_CONTROL_SIDEBAR_BTN = '[data-widget=\"control-sidebar\"]';\n  var SELECTOR_FOOTER = '.main-footer';\n  var SELECTOR_PUSHMENU_BTN = '[data-widget=\"pushmenu\"]';\n  var SELECTOR_LOGIN_BOX = '.login-box';\n  var SELECTOR_REGISTER_BOX = '.register-box';\n  var SELECTOR_PRELOADER = '.preloader';\n  var CLASS_NAME_SIDEBAR_COLLAPSED$1 = 'sidebar-collapse';\n  var CLASS_NAME_SIDEBAR_FOCUSED = 'sidebar-focused';\n  var CLASS_NAME_LAYOUT_FIXED = 'layout-fixed';\n  var CLASS_NAME_CONTROL_SIDEBAR_SLIDE_OPEN = 'control-sidebar-slide-open';\n  var CLASS_NAME_CONTROL_SIDEBAR_OPEN = 'control-sidebar-open';\n  var CLASS_NAME_IFRAME_MODE = 'iframe-mode';\n  var Default$6 = {\n    scrollbarTheme: 'os-theme-light',\n    scrollbarAutoHide: 'l',\n    panelAutoHeight: true,\n    panelAutoHeightMode: 'min-height',\n    preloadDuration: 200,\n    loginRegisterAutoHeight: true\n  };\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var Layout = /*#__PURE__*/function () {\n    function Layout(element, config) {\n      this._config = config;\n      this._element = element;\n    } // Public\n\n    var _proto = Layout.prototype;\n    _proto.fixLayoutHeight = function fixLayoutHeight(extra) {\n      if (extra === void 0) {\n        extra = null;\n      }\n      var $body = $__default[\"default\"]('body');\n      var controlSidebar = 0;\n      if ($body.hasClass(CLASS_NAME_CONTROL_SIDEBAR_SLIDE_OPEN) || $body.hasClass(CLASS_NAME_CONTROL_SIDEBAR_OPEN) || extra === 'control_sidebar') {\n        controlSidebar = $__default[\"default\"](SELECTOR_CONTROL_SIDEBAR_CONTENT).outerHeight();\n      }\n      var heights = {\n        window: $__default[\"default\"](window).height(),\n        header: $__default[\"default\"](SELECTOR_HEADER).length > 0 ? $__default[\"default\"](SELECTOR_HEADER).outerHeight() : 0,\n        footer: $__default[\"default\"](SELECTOR_FOOTER).length > 0 ? $__default[\"default\"](SELECTOR_FOOTER).outerHeight() : 0,\n        sidebar: $__default[\"default\"](SELECTOR_SIDEBAR$1).length > 0 ? $__default[\"default\"](SELECTOR_SIDEBAR$1).height() : 0,\n        controlSidebar: controlSidebar\n      };\n      var max = this._max(heights);\n      var offset = this._config.panelAutoHeight;\n      if (offset === true) {\n        offset = 0;\n      }\n      var $contentSelector = $__default[\"default\"](SELECTOR_CONTENT);\n      if (offset !== false) {\n        if (max === heights.controlSidebar) {\n          $contentSelector.css(this._config.panelAutoHeightMode, max + offset);\n        } else if (max === heights.window) {\n          $contentSelector.css(this._config.panelAutoHeightMode, max + offset - heights.header - heights.footer);\n        } else {\n          $contentSelector.css(this._config.panelAutoHeightMode, max + offset - heights.header);\n        }\n        if (this._isFooterFixed()) {\n          $contentSelector.css(this._config.panelAutoHeightMode, parseFloat($contentSelector.css(this._config.panelAutoHeightMode)) + heights.footer);\n        }\n      }\n      if (!$body.hasClass(CLASS_NAME_LAYOUT_FIXED)) {\n        return;\n      }\n      if (typeof $__default[\"default\"].fn.overlayScrollbars !== 'undefined') {\n        $__default[\"default\"](SELECTOR_SIDEBAR$1).overlayScrollbars({\n          className: this._config.scrollbarTheme,\n          sizeAutoCapable: true,\n          scrollbars: {\n            autoHide: this._config.scrollbarAutoHide,\n            clickScrolling: true\n          }\n        });\n      } else {\n        $__default[\"default\"](SELECTOR_SIDEBAR$1).css('overflow-y', 'auto');\n      }\n    };\n    _proto.fixLoginRegisterHeight = function fixLoginRegisterHeight() {\n      var $body = $__default[\"default\"]('body');\n      var $selector = $__default[\"default\"](SELECTOR_LOGIN_BOX + \", \" + SELECTOR_REGISTER_BOX);\n      if ($body.hasClass(CLASS_NAME_IFRAME_MODE)) {\n        $body.css('height', '100%');\n        $__default[\"default\"]('.wrapper').css('height', '100%');\n        $__default[\"default\"]('html').css('height', '100%');\n      } else if ($selector.length === 0) {\n        $body.css('height', 'auto');\n        $__default[\"default\"]('html').css('height', 'auto');\n      } else {\n        var boxHeight = $selector.height();\n        if ($body.css(this._config.panelAutoHeightMode) !== boxHeight) {\n          $body.css(this._config.panelAutoHeightMode, boxHeight);\n        }\n      }\n    } // Private\n    ;\n\n    _proto._init = function _init() {\n      var _this = this;\n\n      // Activate layout height watcher\n      this.fixLayoutHeight();\n      if (this._config.loginRegisterAutoHeight === true) {\n        this.fixLoginRegisterHeight();\n      } else if (this._config.loginRegisterAutoHeight === parseInt(this._config.loginRegisterAutoHeight, 10)) {\n        setInterval(this.fixLoginRegisterHeight, this._config.loginRegisterAutoHeight);\n      }\n      $__default[\"default\"](SELECTOR_SIDEBAR$1).on('collapsed.lte.treeview expanded.lte.treeview', function () {\n        _this.fixLayoutHeight();\n      });\n      $__default[\"default\"](SELECTOR_MAIN_SIDEBAR).on('mouseenter mouseleave', function () {\n        if ($__default[\"default\"]('body').hasClass(CLASS_NAME_SIDEBAR_COLLAPSED$1)) {\n          _this.fixLayoutHeight();\n        }\n      });\n      $__default[\"default\"](SELECTOR_PUSHMENU_BTN).on('collapsed.lte.pushmenu shown.lte.pushmenu', function () {\n        setTimeout(function () {\n          _this.fixLayoutHeight();\n        }, 300);\n      });\n      $__default[\"default\"](SELECTOR_CONTROL_SIDEBAR_BTN).on('collapsed.lte.controlsidebar', function () {\n        _this.fixLayoutHeight();\n      }).on('expanded.lte.controlsidebar', function () {\n        _this.fixLayoutHeight('control_sidebar');\n      });\n      $__default[\"default\"](window).resize(function () {\n        _this.fixLayoutHeight();\n      });\n      setTimeout(function () {\n        $__default[\"default\"]('body.hold-transition').removeClass('hold-transition');\n      }, 50);\n      setTimeout(function () {\n        var $preloader = $__default[\"default\"](SELECTOR_PRELOADER);\n        if ($preloader) {\n          $preloader.css('height', 0);\n          setTimeout(function () {\n            $preloader.children().hide();\n          }, 200);\n        }\n      }, this._config.preloadDuration);\n    };\n    _proto._max = function _max(numbers) {\n      // Calculate the maximum number in a list\n      var max = 0;\n      Object.keys(numbers).forEach(function (key) {\n        if (numbers[key] > max) {\n          max = numbers[key];\n        }\n      });\n      return max;\n    };\n    _proto._isFooterFixed = function _isFooterFixed() {\n      return $__default[\"default\"](SELECTOR_FOOTER).css('position') === 'fixed';\n    } // Static\n    ;\n\n    Layout._jQueryInterface = function _jQueryInterface(config) {\n      if (config === void 0) {\n        config = '';\n      }\n      return this.each(function () {\n        var data = $__default[\"default\"](this).data(DATA_KEY$6);\n        var _options = $__default[\"default\"].extend({}, Default$6, $__default[\"default\"](this).data());\n        if (!data) {\n          data = new Layout($__default[\"default\"](this), _options);\n          $__default[\"default\"](this).data(DATA_KEY$6, data);\n        }\n        if (config === 'init' || config === '') {\n          data._init();\n        } else if (config === 'fixLayoutHeight' || config === 'fixLoginRegisterHeight') {\n          data[config]();\n        }\n      });\n    };\n    return Layout;\n  }();\n  /**\n   * Data API\n   * ====================================================\n   */\n\n  $__default[\"default\"](window).on('load', function () {\n    Layout._jQueryInterface.call($__default[\"default\"]('body'));\n  });\n  $__default[\"default\"](SELECTOR_SIDEBAR$1 + \" a\").on('focusin', function () {\n    $__default[\"default\"](SELECTOR_MAIN_SIDEBAR).addClass(CLASS_NAME_SIDEBAR_FOCUSED);\n  }).on('focusout', function () {\n    $__default[\"default\"](SELECTOR_MAIN_SIDEBAR).removeClass(CLASS_NAME_SIDEBAR_FOCUSED);\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$6] = Layout._jQueryInterface;\n  $__default[\"default\"].fn[NAME$6].Constructor = Layout;\n  $__default[\"default\"].fn[NAME$6].noConflict = function () {\n    $__default[\"default\"].fn[NAME$6] = JQUERY_NO_CONFLICT$6;\n    return Layout._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE PushMenu.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$5 = 'PushMenu';\n  var DATA_KEY$5 = 'lte.pushmenu';\n  var EVENT_KEY$2 = \".\" + DATA_KEY$5;\n  var JQUERY_NO_CONFLICT$5 = $__default[\"default\"].fn[NAME$5];\n  var EVENT_COLLAPSED$1 = \"collapsed\" + EVENT_KEY$2;\n  var EVENT_COLLAPSED_DONE = \"collapsed-done\" + EVENT_KEY$2;\n  var EVENT_SHOWN = \"shown\" + EVENT_KEY$2;\n  var SELECTOR_TOGGLE_BUTTON$1 = '[data-widget=\"pushmenu\"]';\n  var SELECTOR_BODY = 'body';\n  var SELECTOR_OVERLAY = '#sidebar-overlay';\n  var SELECTOR_WRAPPER = '.wrapper';\n  var CLASS_NAME_COLLAPSED = 'sidebar-collapse';\n  var CLASS_NAME_OPEN$3 = 'sidebar-open';\n  var CLASS_NAME_IS_OPENING$1 = 'sidebar-is-opening';\n  var CLASS_NAME_CLOSED = 'sidebar-closed';\n  var Default$5 = {\n    autoCollapseSize: 992,\n    enableRemember: false,\n    noTransitionAfterReload: true,\n    animationSpeed: 300\n  };\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var PushMenu = /*#__PURE__*/function () {\n    function PushMenu(element, options) {\n      this._element = element;\n      this._options = $__default[\"default\"].extend({}, Default$5, options);\n      if ($__default[\"default\"](SELECTOR_OVERLAY).length === 0) {\n        this._addOverlay();\n      }\n      this._init();\n    } // Public\n\n    var _proto = PushMenu.prototype;\n    _proto.expand = function expand() {\n      var $bodySelector = $__default[\"default\"](SELECTOR_BODY);\n      if (this._options.autoCollapseSize && $__default[\"default\"](window).width() <= this._options.autoCollapseSize) {\n        $bodySelector.addClass(CLASS_NAME_OPEN$3);\n      }\n      $bodySelector.addClass(CLASS_NAME_IS_OPENING$1).removeClass(CLASS_NAME_COLLAPSED + \" \" + CLASS_NAME_CLOSED).delay(50).queue(function () {\n        $bodySelector.removeClass(CLASS_NAME_IS_OPENING$1);\n        $__default[\"default\"](this).dequeue();\n      });\n      if (this._options.enableRemember) {\n        localStorage.setItem(\"remember\" + EVENT_KEY$2, CLASS_NAME_OPEN$3);\n      }\n      $__default[\"default\"](this._element).trigger($__default[\"default\"].Event(EVENT_SHOWN));\n    };\n    _proto.collapse = function collapse() {\n      var _this = this;\n      var $bodySelector = $__default[\"default\"](SELECTOR_BODY);\n      if (this._options.autoCollapseSize && $__default[\"default\"](window).width() <= this._options.autoCollapseSize) {\n        $bodySelector.removeClass(CLASS_NAME_OPEN$3).addClass(CLASS_NAME_CLOSED);\n      }\n      $bodySelector.addClass(CLASS_NAME_COLLAPSED);\n      if (this._options.enableRemember) {\n        localStorage.setItem(\"remember\" + EVENT_KEY$2, CLASS_NAME_COLLAPSED);\n      }\n      $__default[\"default\"](this._element).trigger($__default[\"default\"].Event(EVENT_COLLAPSED$1));\n      setTimeout(function () {\n        $__default[\"default\"](_this._element).trigger($__default[\"default\"].Event(EVENT_COLLAPSED_DONE));\n      }, this._options.animationSpeed);\n    };\n    _proto.toggle = function toggle() {\n      if ($__default[\"default\"](SELECTOR_BODY).hasClass(CLASS_NAME_COLLAPSED)) {\n        this.expand();\n      } else {\n        this.collapse();\n      }\n    };\n    _proto.autoCollapse = function autoCollapse(resize) {\n      if (resize === void 0) {\n        resize = false;\n      }\n      if (!this._options.autoCollapseSize) {\n        return;\n      }\n      var $bodySelector = $__default[\"default\"](SELECTOR_BODY);\n      if ($__default[\"default\"](window).width() <= this._options.autoCollapseSize) {\n        if (!$bodySelector.hasClass(CLASS_NAME_OPEN$3)) {\n          this.collapse();\n        }\n      } else if (resize === true) {\n        if ($bodySelector.hasClass(CLASS_NAME_OPEN$3)) {\n          $bodySelector.removeClass(CLASS_NAME_OPEN$3);\n        } else if ($bodySelector.hasClass(CLASS_NAME_CLOSED)) {\n          this.expand();\n        }\n      }\n    };\n    _proto.remember = function remember() {\n      if (!this._options.enableRemember) {\n        return;\n      }\n      var $body = $__default[\"default\"]('body');\n      var toggleState = localStorage.getItem(\"remember\" + EVENT_KEY$2);\n      if (toggleState === CLASS_NAME_COLLAPSED) {\n        if (this._options.noTransitionAfterReload) {\n          $body.addClass('hold-transition').addClass(CLASS_NAME_COLLAPSED).delay(50).queue(function () {\n            $__default[\"default\"](this).removeClass('hold-transition');\n            $__default[\"default\"](this).dequeue();\n          });\n        } else {\n          $body.addClass(CLASS_NAME_COLLAPSED);\n        }\n      } else if (this._options.noTransitionAfterReload) {\n        $body.addClass('hold-transition').removeClass(CLASS_NAME_COLLAPSED).delay(50).queue(function () {\n          $__default[\"default\"](this).removeClass('hold-transition');\n          $__default[\"default\"](this).dequeue();\n        });\n      } else {\n        $body.removeClass(CLASS_NAME_COLLAPSED);\n      }\n    } // Private\n    ;\n\n    _proto._init = function _init() {\n      var _this2 = this;\n      this.remember();\n      this.autoCollapse();\n      $__default[\"default\"](window).resize(function () {\n        _this2.autoCollapse(true);\n      });\n    };\n    _proto._addOverlay = function _addOverlay() {\n      var _this3 = this;\n      var overlay = $__default[\"default\"]('<div />', {\n        id: 'sidebar-overlay'\n      });\n      overlay.on('click', function () {\n        _this3.collapse();\n      });\n      $__default[\"default\"](SELECTOR_WRAPPER).append(overlay);\n    } // Static\n    ;\n\n    PushMenu._jQueryInterface = function _jQueryInterface(operation) {\n      return this.each(function () {\n        var data = $__default[\"default\"](this).data(DATA_KEY$5);\n        var _options = $__default[\"default\"].extend({}, Default$5, $__default[\"default\"](this).data());\n        if (!data) {\n          data = new PushMenu(this, _options);\n          $__default[\"default\"](this).data(DATA_KEY$5, data);\n        }\n        if (typeof operation === 'string' && /collapse|expand|toggle/.test(operation)) {\n          data[operation]();\n        }\n      });\n    };\n    return PushMenu;\n  }();\n  /**\n   * Data API\n   * ====================================================\n   */\n\n  $__default[\"default\"](document).on('click', SELECTOR_TOGGLE_BUTTON$1, function (event) {\n    event.preventDefault();\n    var button = event.currentTarget;\n    if ($__default[\"default\"](button).data('widget') !== 'pushmenu') {\n      button = $__default[\"default\"](button).closest(SELECTOR_TOGGLE_BUTTON$1);\n    }\n    PushMenu._jQueryInterface.call($__default[\"default\"](button), 'toggle');\n  });\n  $__default[\"default\"](window).on('load', function () {\n    PushMenu._jQueryInterface.call($__default[\"default\"](SELECTOR_TOGGLE_BUTTON$1));\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$5] = PushMenu._jQueryInterface;\n  $__default[\"default\"].fn[NAME$5].Constructor = PushMenu;\n  $__default[\"default\"].fn[NAME$5].noConflict = function () {\n    $__default[\"default\"].fn[NAME$5] = JQUERY_NO_CONFLICT$5;\n    return PushMenu._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE SidebarSearch.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$4 = 'SidebarSearch';\n  var DATA_KEY$4 = 'lte.sidebar-search';\n  var JQUERY_NO_CONFLICT$4 = $__default[\"default\"].fn[NAME$4];\n  var CLASS_NAME_OPEN$2 = 'sidebar-search-open';\n  var CLASS_NAME_ICON_SEARCH = 'fa-search';\n  var CLASS_NAME_ICON_CLOSE = 'fa-times';\n  var CLASS_NAME_HEADER = 'navigation-header';\n  var CLASS_NAME_SEARCH_RESULTS = 'sidebar-search-results';\n  var CLASS_NAME_LIST_GROUP = 'list-group';\n  var SELECTOR_DATA_WIDGET$1 = '[data-widget=\"sidebar-search\"]';\n  var SELECTOR_SIDEBAR = '.main-sidebar .navigation-sidebar';\n  var SELECTOR_NAV_LINK = '.navigation-link';\n  var SELECTOR_NAV_TREEVIEW = '.navigation-treeview';\n  var SELECTOR_SEARCH_INPUT$1 = SELECTOR_DATA_WIDGET$1 + \" .form-control\";\n  var SELECTOR_SEARCH_BUTTON = SELECTOR_DATA_WIDGET$1 + \" .btn\";\n  var SELECTOR_SEARCH_ICON = SELECTOR_SEARCH_BUTTON + \" i\";\n  var SELECTOR_SEARCH_LIST_GROUP = \".\" + CLASS_NAME_LIST_GROUP;\n  var SELECTOR_SEARCH_RESULTS = \".\" + CLASS_NAME_SEARCH_RESULTS;\n  var SELECTOR_SEARCH_RESULTS_GROUP = SELECTOR_SEARCH_RESULTS + \" .\" + CLASS_NAME_LIST_GROUP;\n  var Default$4 = {\n    arrowSign: '->',\n    minLength: 3,\n    maxResults: 7,\n    highlightName: true,\n    highlightPath: false,\n    highlightClass: 'text-light',\n    notFoundText: 'No element found!'\n  };\n  var SearchItems = [];\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var SidebarSearch = /*#__PURE__*/function () {\n    function SidebarSearch(_element, _options) {\n      this.element = _element;\n      this.options = $__default[\"default\"].extend({}, Default$4, _options);\n      this.items = [];\n    } // Public\n\n    var _proto = SidebarSearch.prototype;\n    _proto.init = function init() {\n      var _this = this;\n      if ($__default[\"default\"](SELECTOR_DATA_WIDGET$1).length === 0) {\n        return;\n      }\n      if ($__default[\"default\"](SELECTOR_DATA_WIDGET$1).next(SELECTOR_SEARCH_RESULTS).length === 0) {\n        $__default[\"default\"](SELECTOR_DATA_WIDGET$1).after($__default[\"default\"]('<div />', {\n          \"class\": CLASS_NAME_SEARCH_RESULTS\n        }));\n      }\n      if ($__default[\"default\"](SELECTOR_SEARCH_RESULTS).children(SELECTOR_SEARCH_LIST_GROUP).length === 0) {\n        $__default[\"default\"](SELECTOR_SEARCH_RESULTS).append($__default[\"default\"]('<div />', {\n          \"class\": CLASS_NAME_LIST_GROUP\n        }));\n      }\n      this._addNotFound();\n      $__default[\"default\"](SELECTOR_SIDEBAR).children().each(function (i, child) {\n        _this._parseItem(child);\n      });\n    };\n    _proto.search = function search() {\n      var _this2 = this;\n      var searchValue = $__default[\"default\"](SELECTOR_SEARCH_INPUT$1).val().toLowerCase();\n      if (searchValue.length < this.options.minLength) {\n        $__default[\"default\"](SELECTOR_SEARCH_RESULTS_GROUP).empty();\n        this._addNotFound();\n        this.close();\n        return;\n      }\n      var searchResults = SearchItems.filter(function (item) {\n        return item.name.toLowerCase().includes(searchValue);\n      });\n      var endResults = $__default[\"default\"](searchResults.slice(0, this.options.maxResults));\n      $__default[\"default\"](SELECTOR_SEARCH_RESULTS_GROUP).empty();\n      if (endResults.length === 0) {\n        this._addNotFound();\n      } else {\n        endResults.each(function (i, result) {\n          $__default[\"default\"](SELECTOR_SEARCH_RESULTS_GROUP).append(_this2._renderItem(escape(result.name), encodeURI(result.link), result.path));\n        });\n      }\n      this.open();\n    };\n    _proto.open = function open() {\n      $__default[\"default\"](SELECTOR_DATA_WIDGET$1).parent().addClass(CLASS_NAME_OPEN$2);\n      $__default[\"default\"](SELECTOR_SEARCH_ICON).removeClass(CLASS_NAME_ICON_SEARCH).addClass(CLASS_NAME_ICON_CLOSE);\n    };\n    _proto.close = function close() {\n      $__default[\"default\"](SELECTOR_DATA_WIDGET$1).parent().removeClass(CLASS_NAME_OPEN$2);\n      $__default[\"default\"](SELECTOR_SEARCH_ICON).removeClass(CLASS_NAME_ICON_CLOSE).addClass(CLASS_NAME_ICON_SEARCH);\n    };\n    _proto.toggle = function toggle() {\n      if ($__default[\"default\"](SELECTOR_DATA_WIDGET$1).parent().hasClass(CLASS_NAME_OPEN$2)) {\n        this.close();\n      } else {\n        this.open();\n      }\n    } // Private\n    ;\n\n    _proto._parseItem = function _parseItem(item, path) {\n      var _this3 = this;\n      if (path === void 0) {\n        path = [];\n      }\n      if ($__default[\"default\"](item).hasClass(CLASS_NAME_HEADER)) {\n        return;\n      }\n      var itemObject = {};\n      var navLink = $__default[\"default\"](item).clone().find(\"> \" + SELECTOR_NAV_LINK);\n      var navTreeview = $__default[\"default\"](item).clone().find(\"> \" + SELECTOR_NAV_TREEVIEW);\n      var link = navLink.attr('href');\n      var name = navLink.find('p').children().remove().end().text();\n      itemObject.name = this._trimText(name);\n      itemObject.link = link;\n      itemObject.path = path;\n      if (navTreeview.length === 0) {\n        SearchItems.push(itemObject);\n      } else {\n        var newPath = itemObject.path.concat([itemObject.name]);\n        navTreeview.children().each(function (i, child) {\n          _this3._parseItem(child, newPath);\n        });\n      }\n    };\n    _proto._trimText = function _trimText(text) {\n      return $.trim(text.replace(/(\\r\\n|\\n|\\r)/gm, ' '));\n    };\n    _proto._renderItem = function _renderItem(name, link, path) {\n      var _this4 = this;\n      path = path.join(\" \" + this.options.arrowSign + \" \");\n      name = unescape(name);\n      link = decodeURI(link);\n      if (this.options.highlightName || this.options.highlightPath) {\n        var searchValue = $__default[\"default\"](SELECTOR_SEARCH_INPUT$1).val().toLowerCase();\n        var regExp = new RegExp(searchValue, 'gi');\n        if (this.options.highlightName) {\n          name = name.replace(regExp, function (str) {\n            return \"<strong class=\\\"\" + _this4.options.highlightClass + \"\\\">\" + str + \"</strong>\";\n          });\n        }\n        if (this.options.highlightPath) {\n          path = path.replace(regExp, function (str) {\n            return \"<strong class=\\\"\" + _this4.options.highlightClass + \"\\\">\" + str + \"</strong>\";\n          });\n        }\n      }\n      var groupItemElement = $__default[\"default\"]('<a/>', {\n        href: decodeURIComponent(link),\n        \"class\": 'list-group-item'\n      });\n      var searchTitleElement = $__default[\"default\"]('<div/>', {\n        \"class\": 'search-title'\n      }).html(name);\n      var searchPathElement = $__default[\"default\"]('<div/>', {\n        \"class\": 'search-path'\n      }).html(path);\n      groupItemElement.append(searchTitleElement).append(searchPathElement);\n      return groupItemElement;\n    };\n    _proto._addNotFound = function _addNotFound() {\n      $__default[\"default\"](SELECTOR_SEARCH_RESULTS_GROUP).append(this._renderItem(this.options.notFoundText, '#', []));\n    } // Static\n    ;\n\n    SidebarSearch._jQueryInterface = function _jQueryInterface(config) {\n      var data = $__default[\"default\"](this).data(DATA_KEY$4);\n      if (!data) {\n        data = $__default[\"default\"](this).data();\n      }\n      var _options = $__default[\"default\"].extend({}, Default$4, _typeof(config) === 'object' ? config : data);\n      var plugin = new SidebarSearch($__default[\"default\"](this), _options);\n      $__default[\"default\"](this).data(DATA_KEY$4, _typeof(config) === 'object' ? config : data);\n      if (typeof config === 'string' && /init|toggle|close|open|search/.test(config)) {\n        plugin[config]();\n      } else {\n        plugin.init();\n      }\n    };\n    return SidebarSearch;\n  }();\n  /**\n   * Data API\n   * ====================================================\n   */\n\n  $__default[\"default\"](document).on('click', SELECTOR_SEARCH_BUTTON, function (event) {\n    event.preventDefault();\n    SidebarSearch._jQueryInterface.call($__default[\"default\"](SELECTOR_DATA_WIDGET$1), 'toggle');\n  });\n  $__default[\"default\"](document).on('keyup', SELECTOR_SEARCH_INPUT$1, function (event) {\n    if (event.keyCode == 38) {\n      event.preventDefault();\n      $__default[\"default\"](SELECTOR_SEARCH_RESULTS_GROUP).children().last().focus();\n      return;\n    }\n    if (event.keyCode == 40) {\n      event.preventDefault();\n      $__default[\"default\"](SELECTOR_SEARCH_RESULTS_GROUP).children().first().focus();\n      return;\n    }\n    setTimeout(function () {\n      SidebarSearch._jQueryInterface.call($__default[\"default\"](SELECTOR_DATA_WIDGET$1), 'search');\n    }, 100);\n  });\n  $__default[\"default\"](document).on('keydown', SELECTOR_SEARCH_RESULTS_GROUP, function (event) {\n    var $focused = $__default[\"default\"](':focus');\n    if (event.keyCode == 38) {\n      event.preventDefault();\n      if ($focused.is(':first-child')) {\n        $focused.siblings().last().focus();\n      } else {\n        $focused.prev().focus();\n      }\n    }\n    if (event.keyCode == 40) {\n      event.preventDefault();\n      if ($focused.is(':last-child')) {\n        $focused.siblings().first().focus();\n      } else {\n        $focused.next().focus();\n      }\n    }\n  });\n  $__default[\"default\"](window).on('load', function () {\n    SidebarSearch._jQueryInterface.call($__default[\"default\"](SELECTOR_DATA_WIDGET$1), 'init');\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$4] = SidebarSearch._jQueryInterface;\n  $__default[\"default\"].fn[NAME$4].Constructor = SidebarSearch;\n  $__default[\"default\"].fn[NAME$4].noConflict = function () {\n    $__default[\"default\"].fn[NAME$4] = JQUERY_NO_CONFLICT$4;\n    return SidebarSearch._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE NavbarSearch.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$3 = 'NavbarSearch';\n  var DATA_KEY$3 = 'lte.navbar-search';\n  var JQUERY_NO_CONFLICT$3 = $__default[\"default\"].fn[NAME$3];\n  var SELECTOR_TOGGLE_BUTTON = '[data-widget=\"navbar-search\"]';\n  var SELECTOR_SEARCH_BLOCK = '.navbar-search-block';\n  var SELECTOR_SEARCH_INPUT = '.form-control';\n  var CLASS_NAME_OPEN$1 = 'navbar-search-open';\n  var Default$3 = {\n    resetOnClose: true,\n    target: SELECTOR_SEARCH_BLOCK\n  };\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var NavbarSearch = /*#__PURE__*/function () {\n    function NavbarSearch(_element, _options) {\n      this._element = _element;\n      this._config = $__default[\"default\"].extend({}, Default$3, _options);\n    } // Public\n\n    var _proto = NavbarSearch.prototype;\n    _proto.open = function open() {\n      $__default[\"default\"](this._config.target).css('display', 'flex').hide().fadeIn().addClass(CLASS_NAME_OPEN$1);\n      $__default[\"default\"](this._config.target + \" \" + SELECTOR_SEARCH_INPUT).focus();\n    };\n    _proto.close = function close() {\n      $__default[\"default\"](this._config.target).fadeOut().removeClass(CLASS_NAME_OPEN$1);\n      if (this._config.resetOnClose) {\n        $__default[\"default\"](this._config.target + \" \" + SELECTOR_SEARCH_INPUT).val('');\n      }\n    };\n    _proto.toggle = function toggle() {\n      if ($__default[\"default\"](this._config.target).hasClass(CLASS_NAME_OPEN$1)) {\n        this.close();\n      } else {\n        this.open();\n      }\n    } // Static\n    ;\n\n    NavbarSearch._jQueryInterface = function _jQueryInterface(options) {\n      return this.each(function () {\n        var data = $__default[\"default\"](this).data(DATA_KEY$3);\n        var _options = $__default[\"default\"].extend({}, Default$3, $__default[\"default\"](this).data());\n        if (!data) {\n          data = new NavbarSearch(this, _options);\n          $__default[\"default\"](this).data(DATA_KEY$3, data);\n        }\n        if (!/toggle|close|open/.test(options)) {\n          throw new Error(\"Undefined method \" + options);\n        }\n        data[options]();\n      });\n    };\n    return NavbarSearch;\n  }();\n  /**\n   * Data API\n   * ====================================================\n   */\n\n  $__default[\"default\"](document).on('click', SELECTOR_TOGGLE_BUTTON, function (event) {\n    event.preventDefault();\n    var button = $__default[\"default\"](event.currentTarget);\n    if (button.data('widget') !== 'navbar-search') {\n      button = button.closest(SELECTOR_TOGGLE_BUTTON);\n    }\n    NavbarSearch._jQueryInterface.call(button, 'toggle');\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$3] = NavbarSearch._jQueryInterface;\n  $__default[\"default\"].fn[NAME$3].Constructor = NavbarSearch;\n  $__default[\"default\"].fn[NAME$3].noConflict = function () {\n    $__default[\"default\"].fn[NAME$3] = JQUERY_NO_CONFLICT$3;\n    return NavbarSearch._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE Toasts.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$2 = 'Toasts';\n  var DATA_KEY$2 = 'lte.toasts';\n  var EVENT_KEY$1 = \".\" + DATA_KEY$2;\n  var JQUERY_NO_CONFLICT$2 = $__default[\"default\"].fn[NAME$2];\n  var EVENT_INIT = \"init\" + EVENT_KEY$1;\n  var EVENT_CREATED = \"created\" + EVENT_KEY$1;\n  var EVENT_REMOVED = \"removed\" + EVENT_KEY$1;\n  var SELECTOR_CONTAINER_TOP_RIGHT = '#toastsContainerTopRight';\n  var SELECTOR_CONTAINER_TOP_LEFT = '#toastsContainerTopLeft';\n  var SELECTOR_CONTAINER_BOTTOM_RIGHT = '#toastsContainerBottomRight';\n  var SELECTOR_CONTAINER_BOTTOM_LEFT = '#toastsContainerBottomLeft';\n  var CLASS_NAME_TOP_RIGHT = 'toasts-top-right';\n  var CLASS_NAME_TOP_LEFT = 'toasts-top-left';\n  var CLASS_NAME_BOTTOM_RIGHT = 'toasts-bottom-right';\n  var CLASS_NAME_BOTTOM_LEFT = 'toasts-bottom-left';\n  var POSITION_TOP_RIGHT = 'topRight';\n  var POSITION_TOP_LEFT = 'topLeft';\n  var POSITION_BOTTOM_RIGHT = 'bottomRight';\n  var POSITION_BOTTOM_LEFT = 'bottomLeft';\n  var Default$2 = {\n    position: POSITION_TOP_RIGHT,\n    fixed: true,\n    autohide: false,\n    autoremove: true,\n    delay: 1000,\n    fade: true,\n    icon: null,\n    image: null,\n    imageAlt: null,\n    imageHeight: '25px',\n    title: null,\n    subtitle: null,\n    close: true,\n    body: null,\n    \"class\": null\n  };\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var Toasts = /*#__PURE__*/function () {\n    function Toasts(element, config) {\n      this._config = config;\n      this._prepareContainer();\n      $__default[\"default\"]('body').trigger($__default[\"default\"].Event(EVENT_INIT));\n    } // Public\n\n    var _proto = Toasts.prototype;\n    _proto.create = function create() {\n      var toast = $__default[\"default\"]('<div class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"/>');\n      toast.data('autohide', this._config.autohide);\n      toast.data('animation', this._config.fade);\n      if (this._config[\"class\"]) {\n        toast.addClass(this._config[\"class\"]);\n      }\n      if (this._config.delay && this._config.delay != 500) {\n        toast.data('delay', this._config.delay);\n      }\n      var toastHeader = $__default[\"default\"]('<div class=\"toast-header\">');\n      if (this._config.image != null) {\n        var toastImage = $__default[\"default\"]('<img />').addClass('rounded mr-2').attr('src', this._config.image).attr('alt', this._config.imageAlt);\n        if (this._config.imageHeight != null) {\n          toastImage.height(this._config.imageHeight).width('auto');\n        }\n        toastHeader.append(toastImage);\n      }\n      if (this._config.icon != null) {\n        toastHeader.append($__default[\"default\"]('<i />').addClass('mr-2').addClass(this._config.icon));\n      }\n      if (this._config.title != null) {\n        toastHeader.append($__default[\"default\"]('<strong />').addClass('mr-auto').html(this._config.title));\n      }\n      if (this._config.subtitle != null) {\n        toastHeader.append($__default[\"default\"]('<small />').html(this._config.subtitle));\n      }\n      if (this._config.close == true) {\n        var toastClose = $__default[\"default\"]('<button data-dismiss=\"toast\" />').attr('type', 'button').addClass('ml-2 mb-1 close').attr('aria-label', 'Close').append('<span aria-hidden=\"true\">&times;</span>');\n        if (this._config.title == null) {\n          toastClose.toggleClass('ml-2 ml-auto');\n        }\n        toastHeader.append(toastClose);\n      }\n      toast.append(toastHeader);\n      if (this._config.body != null) {\n        toast.append($__default[\"default\"]('<div class=\"toast-body\" />').html(this._config.body));\n      }\n      $__default[\"default\"](this._getContainerId()).prepend(toast);\n      var $body = $__default[\"default\"]('body');\n      $body.trigger($__default[\"default\"].Event(EVENT_CREATED));\n      toast.toast('show');\n      if (this._config.autoremove) {\n        toast.on('hidden.bs.toast', function () {\n          $__default[\"default\"](this).delay(200).remove();\n          $body.trigger($__default[\"default\"].Event(EVENT_REMOVED));\n        });\n      }\n    } // Static\n    ;\n\n    _proto._getContainerId = function _getContainerId() {\n      if (this._config.position == POSITION_TOP_RIGHT) {\n        return SELECTOR_CONTAINER_TOP_RIGHT;\n      }\n      if (this._config.position == POSITION_TOP_LEFT) {\n        return SELECTOR_CONTAINER_TOP_LEFT;\n      }\n      if (this._config.position == POSITION_BOTTOM_RIGHT) {\n        return SELECTOR_CONTAINER_BOTTOM_RIGHT;\n      }\n      if (this._config.position == POSITION_BOTTOM_LEFT) {\n        return SELECTOR_CONTAINER_BOTTOM_LEFT;\n      }\n    };\n    _proto._prepareContainer = function _prepareContainer() {\n      if ($__default[\"default\"](this._getContainerId()).length === 0) {\n        var container = $__default[\"default\"]('<div />').attr('id', this._getContainerId().replace('#', ''));\n        if (this._config.position == POSITION_TOP_RIGHT) {\n          container.addClass(CLASS_NAME_TOP_RIGHT);\n        } else if (this._config.position == POSITION_TOP_LEFT) {\n          container.addClass(CLASS_NAME_TOP_LEFT);\n        } else if (this._config.position == POSITION_BOTTOM_RIGHT) {\n          container.addClass(CLASS_NAME_BOTTOM_RIGHT);\n        } else if (this._config.position == POSITION_BOTTOM_LEFT) {\n          container.addClass(CLASS_NAME_BOTTOM_LEFT);\n        }\n        $__default[\"default\"]('body').append(container);\n      }\n      if (this._config.fixed) {\n        $__default[\"default\"](this._getContainerId()).addClass('fixed');\n      } else {\n        $__default[\"default\"](this._getContainerId()).removeClass('fixed');\n      }\n    } // Static\n    ;\n\n    Toasts._jQueryInterface = function _jQueryInterface(option, config) {\n      return this.each(function () {\n        var _options = $__default[\"default\"].extend({}, Default$2, config);\n        var toast = new Toasts($__default[\"default\"](this), _options);\n        if (option === 'create') {\n          toast[option]();\n        }\n      });\n    };\n    return Toasts;\n  }();\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$2] = Toasts._jQueryInterface;\n  $__default[\"default\"].fn[NAME$2].Constructor = Toasts;\n  $__default[\"default\"].fn[NAME$2].noConflict = function () {\n    $__default[\"default\"].fn[NAME$2] = JQUERY_NO_CONFLICT$2;\n    return Toasts._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE TodoList.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME$1 = 'TodoList';\n  var DATA_KEY$1 = 'lte.todolist';\n  var JQUERY_NO_CONFLICT$1 = $__default[\"default\"].fn[NAME$1];\n  var SELECTOR_DATA_TOGGLE = '[data-widget=\"todo-list\"]';\n  var CLASS_NAME_TODO_LIST_DONE = 'done';\n  var Default$1 = {\n    onCheck: function onCheck(item) {\n      return item;\n    },\n    onUnCheck: function onUnCheck(item) {\n      return item;\n    }\n  };\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var TodoList = /*#__PURE__*/function () {\n    function TodoList(element, config) {\n      this._config = config;\n      this._element = element;\n      this._init();\n    } // Public\n\n    var _proto = TodoList.prototype;\n    _proto.toggle = function toggle(item) {\n      item.parents('li').toggleClass(CLASS_NAME_TODO_LIST_DONE);\n      if (!$__default[\"default\"](item).prop('checked')) {\n        this.unCheck($__default[\"default\"](item));\n        return;\n      }\n      this.check(item);\n    };\n    _proto.check = function check(item) {\n      this._config.onCheck.call(item);\n    };\n    _proto.unCheck = function unCheck(item) {\n      this._config.onUnCheck.call(item);\n    } // Private\n    ;\n\n    _proto._init = function _init() {\n      var _this = this;\n      var $toggleSelector = this._element;\n      $toggleSelector.find('input:checkbox:checked').parents('li').toggleClass(CLASS_NAME_TODO_LIST_DONE);\n      $toggleSelector.on('change', 'input:checkbox', function (event) {\n        _this.toggle($__default[\"default\"](event.target));\n      });\n    } // Static\n    ;\n\n    TodoList._jQueryInterface = function _jQueryInterface(config) {\n      return this.each(function () {\n        var data = $__default[\"default\"](this).data(DATA_KEY$1);\n        if (!data) {\n          data = $__default[\"default\"](this).data();\n        }\n        var _options = $__default[\"default\"].extend({}, Default$1, _typeof(config) === 'object' ? config : data);\n        var plugin = new TodoList($__default[\"default\"](this), _options);\n        $__default[\"default\"](this).data(DATA_KEY$1, _typeof(config) === 'object' ? config : data);\n        if (config === 'init') {\n          plugin[config]();\n        }\n      });\n    };\n    return TodoList;\n  }();\n  /**\n   * Data API\n   * ====================================================\n   */\n\n  $__default[\"default\"](window).on('load', function () {\n    TodoList._jQueryInterface.call($__default[\"default\"](SELECTOR_DATA_TOGGLE));\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME$1] = TodoList._jQueryInterface;\n  $__default[\"default\"].fn[NAME$1].Constructor = TodoList;\n  $__default[\"default\"].fn[NAME$1].noConflict = function () {\n    $__default[\"default\"].fn[NAME$1] = JQUERY_NO_CONFLICT$1;\n    return TodoList._jQueryInterface;\n  };\n\n  /**\n   * --------------------------------------------\n   * AdminLTE Treeview.js\n   * License MIT\n   * --------------------------------------------\n   */\n  /**\n   * Constants\n   * ====================================================\n   */\n\n  var NAME = 'Treeview';\n  var DATA_KEY = 'lte.treeview';\n  var EVENT_KEY = \".\" + DATA_KEY;\n  var JQUERY_NO_CONFLICT = $__default[\"default\"].fn[NAME];\n  var EVENT_EXPANDED = \"expanded\" + EVENT_KEY;\n  var EVENT_COLLAPSED = \"collapsed\" + EVENT_KEY;\n  var EVENT_LOAD_DATA_API = \"load\" + EVENT_KEY;\n  var SELECTOR_LI = '.navigation-item';\n  var SELECTOR_LINK = '.navigation-link';\n  var SELECTOR_TREEVIEW_MENU = '.navigation-treeview';\n  var SELECTOR_OPEN = '.menu-open';\n  var SELECTOR_DATA_WIDGET = '[data-widget=\"treeview\"]';\n  var CLASS_NAME_OPEN = 'menu-open';\n  var CLASS_NAME_IS_OPENING = 'menu-is-opening';\n  var CLASS_NAME_SIDEBAR_COLLAPSED = 'sidebar-collapse';\n  var Default = {\n    trigger: SELECTOR_DATA_WIDGET + \" \" + SELECTOR_LINK,\n    animationSpeed: 300,\n    accordion: true,\n    expandSidebar: false,\n    sidebarButtonSelector: '[data-widget=\"pushmenu\"]'\n  };\n  /**\n   * Class Definition\n   * ====================================================\n   */\n\n  var Treeview = /*#__PURE__*/function () {\n    function Treeview(element, config) {\n      this._config = config;\n      this._element = element;\n    } // Public\n\n    var _proto = Treeview.prototype;\n    _proto.init = function init() {\n      $__default[\"default\"](\"\" + SELECTOR_LI + SELECTOR_OPEN + \" \" + SELECTOR_TREEVIEW_MENU + SELECTOR_OPEN).css('display', 'block');\n      this._setupListeners();\n    };\n    _proto.expand = function expand(treeviewMenu, parentLi) {\n      var _this = this;\n      var expandedEvent = $__default[\"default\"].Event(EVENT_EXPANDED);\n      if (this._config.accordion) {\n        var openMenuLi = parentLi.siblings(SELECTOR_OPEN).first();\n        var openTreeview = openMenuLi.find(SELECTOR_TREEVIEW_MENU).first();\n        this.collapse(openTreeview, openMenuLi);\n      }\n      parentLi.addClass(CLASS_NAME_IS_OPENING);\n      treeviewMenu.stop().slideDown(this._config.animationSpeed, function () {\n        parentLi.addClass(CLASS_NAME_OPEN);\n        $__default[\"default\"](_this._element).trigger(expandedEvent);\n      });\n      if (this._config.expandSidebar) {\n        this._expandSidebar();\n      }\n    };\n    _proto.collapse = function collapse(treeviewMenu, parentLi) {\n      var _this2 = this;\n      var collapsedEvent = $__default[\"default\"].Event(EVENT_COLLAPSED);\n      parentLi.removeClass(CLASS_NAME_IS_OPENING + \" \" + CLASS_NAME_OPEN);\n      treeviewMenu.stop().slideUp(this._config.animationSpeed, function () {\n        $__default[\"default\"](_this2._element).trigger(collapsedEvent);\n        treeviewMenu.find(SELECTOR_OPEN + \" > \" + SELECTOR_TREEVIEW_MENU).slideUp();\n        treeviewMenu.find(SELECTOR_OPEN).removeClass(CLASS_NAME_IS_OPENING + \" \" + CLASS_NAME_OPEN);\n      });\n    };\n    _proto.toggle = function toggle(event) {\n      var $relativeTarget = $__default[\"default\"](event.currentTarget);\n      var $parent = $relativeTarget.parent();\n      var treeviewMenu = $parent.find(\"> \" + SELECTOR_TREEVIEW_MENU);\n      if (!treeviewMenu.is(SELECTOR_TREEVIEW_MENU)) {\n        if (!$parent.is(SELECTOR_LI)) {\n          treeviewMenu = $parent.parent().find(\"> \" + SELECTOR_TREEVIEW_MENU);\n        }\n        if (!treeviewMenu.is(SELECTOR_TREEVIEW_MENU)) {\n          return;\n        }\n      }\n      event.preventDefault();\n      var parentLi = $relativeTarget.parents(SELECTOR_LI).first();\n      var isOpen = parentLi.hasClass(CLASS_NAME_OPEN);\n      if (isOpen) {\n        this.collapse($__default[\"default\"](treeviewMenu), parentLi);\n      } else {\n        this.expand($__default[\"default\"](treeviewMenu), parentLi);\n      }\n    } // Private\n    ;\n\n    _proto._setupListeners = function _setupListeners() {\n      var _this3 = this;\n      var elementId = this._element.attr('id') !== undefined ? \"#\" + this._element.attr('id') : '';\n      $__default[\"default\"](document).on('click', \"\" + elementId + this._config.trigger, function (event) {\n        _this3.toggle(event);\n      });\n    };\n    _proto._expandSidebar = function _expandSidebar() {\n      if ($__default[\"default\"]('body').hasClass(CLASS_NAME_SIDEBAR_COLLAPSED)) {\n        $__default[\"default\"](this._config.sidebarButtonSelector).PushMenu('expand');\n      }\n    } // Static\n    ;\n\n    Treeview._jQueryInterface = function _jQueryInterface(config) {\n      return this.each(function () {\n        var data = $__default[\"default\"](this).data(DATA_KEY);\n        var _options = $__default[\"default\"].extend({}, Default, $__default[\"default\"](this).data());\n        if (!data) {\n          data = new Treeview($__default[\"default\"](this), _options);\n          $__default[\"default\"](this).data(DATA_KEY, data);\n        }\n        if (config === 'init') {\n          data[config]();\n        }\n      });\n    };\n    return Treeview;\n  }();\n  /**\n   * Data API\n   * ====================================================\n   */\n\n  $__default[\"default\"](window).on(EVENT_LOAD_DATA_API, function () {\n    $__default[\"default\"](SELECTOR_DATA_WIDGET).each(function () {\n      Treeview._jQueryInterface.call($__default[\"default\"](this), 'init');\n    });\n  });\n  /**\n   * jQuery API\n   * ====================================================\n   */\n\n  $__default[\"default\"].fn[NAME] = Treeview._jQueryInterface;\n  $__default[\"default\"].fn[NAME].Constructor = Treeview;\n  $__default[\"default\"].fn[NAME].noConflict = function () {\n    $__default[\"default\"].fn[NAME] = JQUERY_NO_CONFLICT;\n    return Treeview._jQueryInterface;\n  };\n  exports.CardRefresh = CardRefresh;\n  exports.CardWidget = CardWidget;\n  exports.ControlSidebar = ControlSidebar;\n  exports.DirectChat = DirectChat;\n  exports.Dropdown = Dropdown;\n  exports.ExpandableTable = ExpandableTable;\n  exports.Fullscreen = Fullscreen;\n  exports.IFrame = IFrame;\n  exports.Layout = Layout;\n  exports.NavbarSearch = NavbarSearch;\n  exports.PushMenu = PushMenu;\n  exports.SidebarSearch = SidebarSearch;\n  exports.Toasts = Toasts;\n  exports.TodoList = TodoList;\n  exports.Treeview = Treeview;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/Admin/js/adminlte.js\n");

/***/ })

}]);
